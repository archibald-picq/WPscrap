{"error":0,"message":null,"data":{"name":"ElementsKit","plugin":"elementskit","link":"https:\/\/wpmet.com\/plugin\/elementskit\/","latest":null,"closed":null,"vulnerability":[{"name":"ElementsKit [elementskit] < 2.2.0","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"2.2.0","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"CVE-2021-24258","name":"CVE-2021-24258","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2021-24258","description":"The Elements Kit Lite and Elements Kit Pro WordPress Plugins before 2.2.0 have a number of widgets that are vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.","date":"2021-05-05"},{"id":"b8ce10d9338eacdf9c3dddfae2b475e049401306","name":"Elements Kit Lite\/Pro &lt;= 2.1.7 - Authenticated (Contributor+) Stored Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/elementskit-lite\/elements-kit-litepro-217-authenticated-contributor-stored-cross-site-scripting","description":"The Elements Kit Lite and Elements Kit Pro WordPress Plugins before 2.2.0 have a number of widgets that are vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.","date":null},{"id":"47b47b86-899b-4de3-8a3c-2d5d1774298f","name":"ElementsKit and ElementsKit Pro &lt; 2.2.0 - Contributor+ Stored XSS","link":"https:\/\/wpscan.com\/vulnerability\/47b47b86-899b-4de3-8a3c-2d5d1774298f","description":"The Elements kit lite and Elements kit pro WordPress Plugins &lt; 2.2.0 have a number of widgets that are vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.\r\n\r\nThe &ldquo;fun fact&rdquo; widget accepts an &ldquo;ekit_funfact_title_size&rdquo; parameter. Although the element control lists a fixed set of possible html tags, it is possible to send a &lsquo;save_builder&rsquo; request containing JavaScript in the &lsquo;ekit_funfact_title_size&rsquo; parameter, which is not filtered and is output without escaping. This JavaScript will then be executed when the saved page is viewed or previewed.\r\n\r\nThe heading widget (includes\/widgets\/heading.php) accepts &lsquo;ekit_heading_title_tag&rsquo; and &lsquo;ekit_heading_sub_title_tag&rsquo; parameters. When sending a &lsquo;save_builder&rsquo; request, these parameters can be set to &lsquo;script&rsquo; and combined with the &lsquo;ekit_heading_title&rsquo; or &lsquo;ekit_heading_sub_title&rsquo; parameters containing JavaScript - although the &lsquo;ekit_heading_sub_title&rsquo; parameter is escaped, this is trivial to overcome since the actual scripting tags are added in the &lsquo;ekit_heading_sub_title_tag&rsquo;.\r\n\r\nThe icon box (includes\/widgets\/icon-box.php) widget accepts a &lsquo;ekit_icon_box_title_size&rsquo; parameter. It is possible to send a modified &lsquo;save_builder&rsquo; request containing JavaScript in the &lsquo;ekit_icon_box_title_size&rsquo; parameter for this widget,  which is not filtered and is output without escaping. \r\n\r\nSimilarly, the image box (widgets\/image-box\/image-box.php) widget accepts an &lsquo;ekit_image_box_title_size&rsquo; parameter. It is possible to send a modified &lsquo;save_builder&rsquo; request containing JavaScript in the &lsquo;ekit_image_box_title_size&rsquo; parameter for this widget,  which is not filtered and is output without escaping. \r\n\r\nThe pricing (widgets\/pricing\/pricing.php) widget accepts a &lsquo;ekit_pricing_title_size&rsquo; parameter. When sending a &lsquo;save_builder&rsquo; request, it is possible to set the &lsquo;ekit_pricing_title_size&rsquo; parameter to &lsquo;script&rsquo; and populate the &lsquo;ekit_pricing_table_title&rsquo; parameter with Javascript - although the &lsquo;ekit_pricing_table_title&rsquo; parameter is escrped, this is trivial to overcome since the actual script tag is added in the &lsquo;ekit_pricing_title_size&rsquo; parameter.\r\n\r\nFinally, impacting the pro version only, the motion text (widgets\/motion-text\/motion-text.php) widget accepts a &lsquo;ekit_motion_text_sub_title_tag&rsquo; parameter. It is possible to send a &lsquo;save_builder&rsquo; request containing JavaScript in the &lsquo;ekit_motion_text_sub_title_tag&rsquo; parameter, which is not filtered and is output without escaping. \r\n\r\nEach of these issues can be abused by a lower-privileged user, such as a contributor, to add malicious JavaScript to a post, which would then be executed in the browser of any user previewing that post. It is common for administrators or editors to preview the posts of users without publishing permissions before publishing their content.","date":null}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:L\/I:L\/A:N","av":"n","ac":"l","pr":"l","ui":"r","s":"c","c":"l","i":"l","a":"n","score":"5.4","severity":"m","exploitable":"2.3","impact":"2.7"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}}]},"updated":"1650289184"}