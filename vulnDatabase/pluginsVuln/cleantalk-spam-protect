{"error":0,"message":null,"data":{"name":"Spam protection, AntiSpam, FireWall by CleanTalk","plugin":"cleantalk-spam-protect","link":"https:\/\/wordpress.org\/plugins\/cleantalk-spam-protect\/","latest":"1683275340","closed":0,"vulnerability":[{"name":"Spam protection, AntiSpam, FireWall by CleanTalk [cleantalk-spam-protect] < 5.153.4","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"5.153.4","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"CVE-2021-24295","name":"CVE-2021-24295","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2021-24295","description":"It was possible to exploit an Unauthenticated Time-Based Blind SQL Injection vulnerability in the Spam protection, AntiSpam, FireWall by CleanTalk WordPress Plugin before 5.153.4. The update_log function in lib\/Cleantalk\/ApbctWP\/Firewall\/SFW.php included a vulnerable query that could be injected via the User-Agent Header by manipulating the cookies set by the Spam protection, AntiSpam, FireWall by CleanTalk WordPress plugin before 5.153.4, sending an initial request to obtain a ct_sfw_pass_key cookie and then manually setting a separate ct_sfw_passed cookie and disallowing it from being reset.","date":"2021-05-17"},{"id":"809ecfc35bc1c95c144ec1f18724cd3351c38796","name":"WordPress Spam protection, AntiSpam, FireWall by CleanTalk plugin <= 5.153.3 - Unauthenticated Time-Based Blind SQL Injection (SQLi) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/cleantalk-spam-protect\/wordpress-spam-protection-antispam-firewall-by-cleantalk-plugin-5-153-3-unauthenticated-time-based-blind-sql-injection-sqli-vulnerability","description":"Unauthenticated Time-Based Blind SQL Injection (SQLi) vulnerability discovered by WordFence in WordPress Spam protection, AntiSpam, FireWall by CleanTalk plugin (versions <= 5.153.3).","date":"2021-05-03"},{"id":"19819f075d19903f7f83d104f01e1e4ad0095f73","name":"Spam protection, AntiSpam, FireWall by CleanTalk &lt;= 5.153.3 - Unauthenticated Blind SQL Injection","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/cleantalk-spam-protect\/spam-protection-antispam-firewall-by-cleantalk-51533-unauthenticated-blind-sql-injection","description":"It was possible to exploit an Unauthenticated Time-Based Blind SQL Injection vulnerability in the Spam protection, AntiSpam, FireWall by CleanTalk WordPress Plugin before 5.153.4. The update_log function in lib\/Cleantalk\/ApbctWP\/Firewall\/SFW.php included a vulnerable query that could be injected via the User-Agent Header by manipulating the cookies set by the Spam protection, AntiSpam, FireWall by CleanTalk WordPress plugin before 5.153.4, sending an initial request to obtain a ct_sfw_pass_key cookie and then manually setting a separate ct_sfw_passed cookie and disallowing it from being reset.","date":null},{"id":"152171fc-888c-4275-a118-5a1e664ef28b","name":"Spam protection, AntiSpam, FireWall by CleanTalk &lt; 5.153.4 - Unauthenticated Blind SQL Injection","link":"https:\/\/wpscan.com\/vulnerability\/152171fc-888c-4275-a118-5a1e664ef28b","description":"It was possible to exploit an Unauthenticated Time-Based Blind SQL Injection vulnerability in the Spam protection, AntiSpam, FireWall by CleanTalk WordPress Plugin before 5.153.4. The update_log function in lib\/Cleantalk\/ApbctWP\/Firewall\/SFW.php included a vulnerable query that could be injected via the User-Agent Header by manipulating the cookies set by the plugin, sending an initial request to obtain a ct_sfw_pass_key cookie and then manually setting a separate ct_sfw_passed cookie and disallowing it from being reset.","date":null}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","av":"n","ac":"l","pr":"n","ui":"n","s":"u","c":"h","i":"n","a":"n","score":"7.5","severity":"h","exploitable":"3.9","impact":"3.6"},"cwe":[{"cwe":"CWE-89","name":"Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')","description":"The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}]}},{"name":"Spam protection, AntiSpam, FireWall by CleanTalk [cleantalk-spam-protect] < 5.149","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"5.149","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"CVE-2021-24131","name":"CVE-2021-24131","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2021-24131","description":"Unvalidated input in the Anti-Spam by CleanTalk WordPress plugin, versions before 5.149, lead to multiple authenticated SQL injection vulnerabilities, however, it requires high privilege user (admin+).","date":"2021-03-18"},{"id":"1a396f6242c792b490fb81d06017e8844ecb2611","name":"Anti-Spam by CleanTalk &lt; 5.149 - Authenticated SQL Injection","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/cleantalk-spam-protect\/anti-spam-by-cleantalk-5149-authenticated-sql-injection","description":"Unvalidated input in the Anti-Spam by CleanTalk WordPress plugin, versions before 5.149, lead to multiple authenticated SQL injection vulnerabilities, however, it requires high privilege user (admin+).","date":null},{"id":"1bc28021-28c0-43fa-b89e-6b93c345e5d8","name":"Anti-Spam by CleanTalk &lt; 5.149 - Multiple Authenticated SQL Injections","link":"https:\/\/wpscan.com\/vulnerability\/1bc28021-28c0-43fa-b89e-6b93c345e5d8","description":"Multiple authenticated SQL injections in the Anti-Spam by CleanTalk plugin 5.148 exist, however, it requires high privilege user (admin+).","date":null}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:N\/S:U\/C:H\/I:H\/A:H","av":"n","ac":"l","pr":"h","ui":"n","s":"u","c":"h","i":"h","a":"h","score":"7.2","severity":"h","exploitable":"1.2","impact":"5.9"},"cwe":[{"cwe":"CWE-89","name":"Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')","description":"The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}]}},{"name":"Spam protection, AntiSpam, FireWall by CleanTalk [cleantalk-spam-protect] < 5.127.4","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"5.127.4","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"CVE-2019-17515","name":"CVE-2019-17515","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2019-17515","description":"The CleanTalk cleantalk-spam-protect plugin before 5.127.4 for WordPress is affected by: Cross Site Scripting (XSS). The impact is: Allows an attacker to execute arbitrary HTML and JavaScript code via the from or till parameter. The component is: inc\/cleantalk-users.php and inc\/cleantalk-comments.php. The attack vector is: When the Administrator is logged in, a reflected XSS may execute upon a click on a malicious URL.","date":"2019-11-13"},{"id":"7b6731e7654978ba9cd77025ee19cdfa6d0538b0","name":"WordPress Spam protection, AntiSpam, FireWall by CleanTalk plugin <=5.127.3 - Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/cleantalk-spam-protect\/wordpress-spam-protection-antispam-firewall-by-cleantalk-plugin-5-127-3-cross-site-scripting-xss-vulnerability","description":"Cross-Site Scripting (XSS) vulnerability found in WordPress Spam protection, AntiSpam, FireWall by CleanTalk plugin (versions <=5.127.3).","date":"2019-11-14"},{"id":"674d544b634704beb8a8670157c983693b078da0","name":"Spam protection, AntiSpam, FireWall by CleanTalk &lt;= 5.127.3 - Reflected Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/cleantalk-spam-protect\/spam-protection-antispam-firewall-by-cleantalk-51273-reflected-cross-site-scripting","description":"The CleanTalk cleantalk-spam-protect plugin before 5.127.4 for WordPress is affected by: Cross Site Scripting (XSS). The impact is: Allows an attacker to execute arbitrary HTML and JavaScript code via the from or till parameter. The component is: inc\/cleantalk-users.php and inc\/cleantalk-comments.php. The attack vector is: When the Administrator is logged in, a reflected XSS may execute upon a click on a malicious URL.","date":null},{"id":"204e9fcd-6fd4-462d-a422-5e420ebca3a0","name":"Anti-Spam by CleanTalk &lt; 5.127.4 - Cross-Site Scripting Issue","link":"https:\/\/wpscan.com\/vulnerability\/204e9fcd-6fd4-462d-a422-5e420ebca3a0","description":"The Spam protection, AntiSpam, FireWall by CleanTalk WordPress plugin was affected by a Cross-Site Scripting Issue security vulnerability.","date":null}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","av":"n","ac":"l","pr":"n","ui":"r","s":"c","c":"l","i":"l","a":"n","score":"6.1","severity":"m","exploitable":"2.8","impact":"2.7"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"Spam protection, AntiSpam, FireWall by CleanTalk [cleantalk-spam-protect] < 5.174.1","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"5.174.1","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"CVE-2022-28222","name":"CVE-2022-28222","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2022-28222","description":"The CleanTalk AntiSpam plugin <= 5.173 for WordPress is vulnerable to Reflected Cross-Site Scripting (XSS) via the $_REQUEST['page'] parameter in`\/lib\/Cleantalk\/ApbctWP\/FindSpam\/ListTable\/Users.php`","date":"2022-04-19"},{"id":"2284e81ca1c1df0dc1a7f6460fa1047b7bfcc551","name":"WordPress Spam protection, AntiSpam, FireWall by CleanTalk plugin <= 5.174 - Reflected Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/cleantalk-spam-protect\/wordpress-spam-protection-antispam-firewall-by-cleantalk-plugin-5-174-reflected-cross-site-scripting-xss-vulnerability-1","description":"Reflected Cross-Site Scripting (XSS) vulnerability discovered by Ramuel Gall (Wordfence) in WordPress Spam protection, AntiSpam, FireWall by CleanTalk plugin (versions <= 5.174).","date":"2022-03-30"},{"id":"226d58ce8b96b94aa9397c9282d4ba2ac246d105","name":"Spam protection, AntiSpam, FireWall by CleanTalk &lt;= 5.173 - Reflected Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/cleantalk-spam-protect\/spam-protection-antispam-firewall-by-cleantalk-5173-reflected-cross-site-scripting","description":"The CleanTalk AntiSpam plugin &lt;= 5.173 for WordPress is vulnerable to Reflected Cross-Site Scripting (XSS) via the $_REQUEST[&#039;page&#039;] parameter in the  \/lib\/Cleantalk\/ApbctWP\/FindSpam\/ListTable\/Users.php file.","date":null},{"id":"4f68d896-1cb7-430c-b187-918c9f92005d","name":"Spam protection, AntiSpam, FireWall by CleanTalk &lt; 5.174.1 - Reflected Cross-Site Scripting","link":"https:\/\/wpscan.com\/vulnerability\/4f68d896-1cb7-430c-b187-918c9f92005d","description":"The plugin does not not sanitise and escape the page parameter brief outputting it back in attributes in the \/wp-admin\/edit-comments.php?page=ct_check_spam and Users list dashboard, leading to Reflected Cross-Site Scripting issues","date":null}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","av":"n","ac":"l","pr":"n","ui":"r","s":"c","c":"l","i":"l","a":"n","score":"6.1","severity":"m","exploitable":"2.8","impact":"2.7"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"Spam protection, AntiSpam, FireWall by CleanTalk [cleantalk-spam-protect] < 5.174.1","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"5.174.1","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"CVE-2022-28221","name":"CVE-2022-28221","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2022-28221","description":"The CleanTalk AntiSpam plugin <= 5.173 for WordPress is vulnerable to Reflected Cross-Site Scripting (XSS) via the $_REQUEST['page'] parameter in`\/lib\/Cleantalk\/ApbctWP\/FindSpam\/ListTable\/Comments.php`","date":"2022-04-19"},{"id":"db99da7167b1c5ad3c3474be486c83e72a787717","name":"WordPress Spam protection, AntiSpam, FireWall by CleanTalk plugin <= 5.174 - Reflected Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/cleantalk-spam-protect\/wordpress-spam-protection-antispam-firewall-by-cleantalk-plugin-5-174-reflected-cross-site-scripting-xss-vulnerability","description":"Reflected Cross-Site Scripting (XSS) vulnerability discovered by Ramuel Gall (Wordfence) in WordPress Spam protection, AntiSpam, FireWall by CleanTalk plugin (versions <= 5.174).","date":"2022-03-30"},{"id":"32216bef113d863a532946d1c3263897b46c1a15","name":"Spam protection, AntiSpam, FireWall by CleanTalk &lt;= 5.173 - Reflected Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/cleantalk-spam-protect\/spam-protection-antispam-firewall-by-cleantalk-5173-reflected-cross-site-scripting-2","description":"The CleanTalk AntiSpam plugin &lt;= 5.173 for WordPress is vulnerable to Reflected Cross-Site Scripting (XSS) via the $_REQUEST[&#039;page&#039;] parameter found in the \/lib\/Cleantalk\/ApbctWP\/FindSpam\/ListTable\/Comments.php file.","date":null}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","av":"n","ac":"l","pr":"n","ui":"r","s":"c","c":"l","i":"l","a":"n","score":"6.1","severity":"m","exploitable":"2.8","impact":"2.7"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"Spam protection, AntiSpam, FireWall by CleanTalk [cleantalk-spam-protect] < 5.149","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"5.149","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"e98e54f7684b9d0278bffcf60f53299cf3a4f176","name":"WordPress Anti-Spam by CleanTalk plugin <= 5.148 - Multiple Authenticated SQL Injection (SQLi) vulnerabilities","link":"https:\/\/patchstack.com\/database\/vulnerability\/cleantalk-spam-protect\/wordpress-anti-spam-by-cleantalk-plugin-5-148-multiple-authenticated-sql-injection-sqli-vulnerabilities","description":"Multiple Authenticated SQL Injection (SQLi) vulnerabilities found by Nguyen Anh Tien in WordPress Anti-Spam by CleanTalk plugin (versions <= 5.148).","date":"2020-11-20"}],"impact":[]},{"name":"Spam protection, AntiSpam, FireWall by CleanTalk [cleantalk-spam-protect] < 5.22","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"5.22","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"b0171cd0006b761da43ebc5cfdb81aff7260358e","name":"WordPress Spam Protection Plugin <= 5.21 - Cross Site Scripting","link":"https:\/\/patchstack.com\/database\/vulnerability\/cleantalk-spam-protect\/wordpress-spam-protection-plugin-5-21-cross-site-scripting","description":"Because of this vulnerability, the attackers can inject arbitrary JavaScript or HTML code.\nUpdate the plugin.","date":"2015-08-25"}],"impact":[]},{"name":"Spam protection, AntiSpam, FireWall by CleanTalk [cleantalk-spam-protect] < 5.185.1","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"5.185.1","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"CVE-2022-3302","name":"CVE-2022-3302","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2022-3302","description":"The Spam protection, AntiSpam, FireWall by CleanTalk WordPress plugin before 5.185.1 does not validate ids before using them in a SQL statement, which could lead to SQL injection exploitable by high privilege users such as admin","date":"2022-10-25"},{"id":"8390e9b65b5bce5629215149c1984371be640e83","name":"WordPress AntiSpam by CleanTalk plugin <= 5.185 - Authenticated SQL Injection (SQLi) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/cleantalk-spam-protect\/wordpress-anti-spam-by-cleantalk-plugin-5-185-authenticated-sql-injection-sqli-vulnerability","description":"Authenticated SQL Injection (SQLi) vulnerability discovered by Nguyen Duy Quoc Khanh in WordPress Anti-Spam by CleanTalk plugin (versions <= 5.185).\nUpdate the WordPress Spam protection, AntiSpam, FireWall by CleanTalk plugin to the latest available version (at least 5.185.1).","date":"2022-10-03"},{"id":"7fd16d0ee42b2cac5cdda35225a754808d55bc4c","name":"AntiSpam by CleanTalk &lt;= 5.185 - Authenticated (Administrator+) SQL Injection","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/cleantalk-spam-protect\/antispam-by-cleantalk-5185-authenticated-administrator-sql-injection","description":"The AntiSpam plugin for WordPress is vulnerable to SQL Injection via the &lsquo;ids&rsquo; parameter in versions up to, and including, 5.185 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query. This makes it possible for authenticated attackers, with administrator-level privileges or higher, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.","date":null}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:H\/UI:N\/S:U\/C:H\/I:H\/A:H","av":"n","ac":"l","pr":"h","ui":"n","s":"u","c":"h","i":"h","a":"h","score":"7.2","severity":"h","exploitable":"1.2","impact":"5.9"},"cwe":[{"cwe":"CWE-89","name":"Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')","description":"The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}]}},{"name":"Spam protection, AntiSpam, FireWall by CleanTalk [cleantalk-spam-protect] < 5.22","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"5.22","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"982c7cef-eb17-49c4-9a92-87a5d0aca29b","name":"Anti-Spam by CleanTalk &lt; 5.22 - Unauthenticated Reflected Cross-Site Scripting (XSS)","link":"https:\/\/wpscan.com\/vulnerability\/982c7cef-eb17-49c4-9a92-87a5d0aca29b","description":"The Spam protection, AntiSpam, FireWall by CleanTalk WordPress plugin was affected by an Unauthenticated Reflected Cross-Site Scripting (XSS) security vulnerability.","date":null}],"impact":[]},{"name":"Spam protection, AntiSpam, FireWall by CleanTalk [cleantalk-spam-protect] < 5.22","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"5.22","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"f01f8accef07398569b50193551a58fc2ef8f6ae","name":"Spam protection, AntiSpam, FireWall by CleanTalk &lt; 5.22 - Reflected Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/cleantalk-spam-protect\/spam-protection-antispam-firewall-by-cleantalk-522-reflected-cross-site-scripting","description":"The Spam protection, AntiSpam, FireWall by CleanTalk plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via several parameters in versions before 5.22 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.","date":null}],"impact":[]}]},"updated":"1683166052"}