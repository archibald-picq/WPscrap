{"error":0,"message":null,"data":{"name":"File Manager","plugin":"wp-file-manager","link":"https:\/\/wordpress.org\/plugins\/wp-file-manager\/","latest":"1683202680","closed":0,"vulnerability":[{"name":"File Manager [wp-file-manager] < 7.1","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"7.1","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"CVE-2021-24177","name":"CVE-2021-24177","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2021-24177","description":"In the default configuration of the File Manager WordPress plugin before 7.1, a Reflected XSS can occur on the endpoint \/wp-admin\/admin.php?page=wp_file_manager_properties when a payload is submitted on the User-Agent parameter. The payload is then reflected back on the web application response.","date":"2021-04-05"},{"id":"90ee3c648c0b26a7dda9b5dc0c98be5bf7b111fa","name":"WP File Manager &lt;= 7.0 - Reflected Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/wp-file-manager\/wp-file-manager-70-reflected-cross-site-scripting","description":"In the default configuration of the File Manager WordPress plugin before 7.1, a Reflected XSS can occur on the endpoint \/wp-admin\/admin.php?page=wp_file_manager_properties when a payload is submitted on the User-Agent parameter. The payload is then reflected back on the web application response.","date":null}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:L\/I:L\/A:N","av":"n","ac":"l","pr":"l","ui":"r","s":"c","c":"l","i":"l","a":"n","score":"5.4","severity":"m","exploitable":"2.3","impact":"2.7"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"File Manager [wp-file-manager] < 6.9","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"6.9","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"CVE-2020-25213","name":"CVE-2020-25213","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2020-25213","description":"The File Manager (wp-file-manager) plugin before 6.9 for WordPress allows remote attackers to upload and execute arbitrary PHP code because it renames an unsafe example elFinder connector file to have the .php extension. This, for example, allows attackers to run the elFinder upload (or mkfile and put) command to write PHP code into the wp-content\/plugins\/wp-file-manager\/lib\/files\/ directory. This was exploited in the wild in August and September 2020.","date":"2020-09-09"},{"id":"c570006de12072d56a0f7a74db893f858523905e","name":"WordPress File Manager plugin <= 6.8 - Unauthenticated Arbitrary File Upload leading to RCE vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wp-file-manager\/wordpress-file-manager-plugin-6-8-unauthenticated-arbitrary-file-upload-leading-to-rce-vulnerability","description":"Unauthenticated Arbitrary File Upload leading to RCE vulnerability found by w4fz5uck5 in WordPress File Manager plugin (versions <= 6.8).","date":"2020-09-01"},{"id":"1e00f590f54bb66c27eeedf8765e7ded4acf4d8d","name":"File Manager &lt;= 6.8 - Arbitrary File Upload\/Remote Code Execution","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/wp-file-manager\/file-manager-68-arbitrary-file-uploadremote-code-execution","description":"The File Manager (wp-file-manager) plugin before 6.9 for WordPress allows remote attackers to upload and execute arbitrary PHP code because it renames an unsafe example elFinder connector file to have the .php extension. This, for example, allows attackers to run the elFinder upload (or mkfile and put) command to write PHP code into the wp-content\/plugins\/wp-file-manager\/lib\/files\/ directory. This was exploited in the wild in August and September 2020.","date":null}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","av":"n","ac":"l","pr":"n","ui":"n","s":"u","c":"h","i":"h","a":"h","score":"9.8","severity":"c","exploitable":"3.9","impact":"5.9"},"cwe":[{"cwe":"CWE-434","name":"Unrestricted Upload of File with Dangerous Type","description":"The product allows the attacker to upload or transfer files of dangerous types that can be automatically processed within the product's environment."}]}},{"name":"File Manager [wp-file-manager] < 3.1","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"3.1","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"CVE-2018-16967","name":"CVE-2018-16967","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2018-16967","description":"There is an XSS vulnerability in the mndpsingh287 File Manager plugin 3.0 for WordPress via the page=wp_file_manager_root public_path parameter.","date":"2019-04-15"},{"id":"431e7a72c0b0d37a3d2d0cdd5638881ae9cdfba8","name":"File Manager &lt;= 3.0 - Stored Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/wp-file-manager\/file-manager-30-stored-cross-site-scripting","description":"There is an XSS vulnerability in the File Manager plugin 3.0 for WordPress via the page=wp_file_manager_root public_path parameter.","date":null}],"impact":{"cvss":{"version":"3.0","vector":"CVSS:3.0\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","av":"n","ac":"l","pr":"n","ui":"r","s":"c","c":"l","i":"l","a":"n","score":"6.1","severity":"m","exploitable":"2.8","impact":"2.7"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"File Manager [wp-file-manager] < 3.1","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"3.1","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"CVE-2018-16966","name":"CVE-2018-16966","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2018-16966","description":"There is a CSRF vulnerability in the mndpsingh287 File Manager plugin 3.0 for WordPress via the page=wp_file_manager_root public_path parameter.","date":"2019-04-15"},{"id":"d8d1ca053bba3766485001d152f1a7a1f8a9a120","name":"File Manager &lt;= 3.0 - Cross-Site Request Forgery","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/wp-file-manager\/file-manager-30-cross-site-request-forgery","description":"There is a CSRF vulnerability in the File Manager plugin 3.0 for WordPress via the page=wp_file_manager_root public_path parameter.","date":null}],"impact":{"cvss":{"version":"3.0","vector":"CVSS:3.0\/AV:N\/AC:L\/PR:N\/UI:R\/S:U\/C:H\/I:H\/A:H","av":"n","ac":"l","pr":"n","ui":"r","s":"u","c":"h","i":"h","a":"h","score":"8.8","severity":"h","exploitable":"2.8","impact":"5.9"},"cwe":[{"cwe":"CWE-352","name":"Cross-Site Request Forgery (CSRF)","description":"The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."}]}},{"name":"File Manager [wp-file-manager] < 3.0","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"3.0","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"CVE-2018-16363","name":"CVE-2018-16363","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2018-16363","description":"The mndpsingh287 File Manager plugin V2.9 for WordPress has XSS via the lang parameter in a wp-admin\/admin.php?page=wp_file_manager request because set_transient is used in file_folder_manager.php and there is an echo of lang in lib\\wpfilemanager.php.","date":"2018-09-07"},{"id":"6a0f94e03fb5c3fd45a99f45437f1025ebd189c7","name":"WordPress File Manager plugin <= 2.9 - Authenticated Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/file-manager\/wordpress-file-manager-plugin-2-9-authenticated-cross-site-scripting-xss-vulnerability","description":"Authenticated Cross-Site Scripting (XSS) vulnerability found by ly55521 in WordPress File Manager plugin (versions <= 2.9).","date":"2018-09-09"},{"id":"9266cd116bdcd9fd8134ee9579483f6475b429c7","name":"File Manager &lt;= 2.9 - Reflected Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/wp-file-manager\/file-manager-29-reflected-cross-site-scripting","description":"The mndpsingh287 File Manager plugin V2.9 for WordPress has XSS via the lang parameter in a wp-admin\/admin.php?page=wp_file_manager request because set_transient is used in file_folder_manager.php and there is an echo of lang in lib\\wpfilemanager.php.","date":null}],"impact":{"cvss":{"version":"3.0","vector":"CVSS:3.0\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:L\/I:L\/A:N","av":"n","ac":"l","pr":"l","ui":"r","s":"c","c":"l","i":"l","a":"n","score":"5.4","severity":"m","exploitable":"2.3","impact":"2.7"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"File Manager [wp-file-manager] < 6.5","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"6.5","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"CVE-2020-24312","name":"CVE-2020-24312","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2020-24312","description":"mndpsingh287 WP File Manager v6.4 and lower fails to restrict external access to the fm_backups directory with a .htaccess file. This results in the ability for unauthenticated users to browse and download any site backups, which sometimes include full database backups, that the plugin has taken.","date":"2020-08-26"},{"id":"547c30391a0bc0d0e3c253b656e739f476d89236","name":"WordPress File Manager plugin <= 6.4 - Backup File Directory Listing vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wp-file-manager\/wordpress-file-manager-plugin-6-4-backup-file-directory-listing-vulnerability","description":"Backup File Directory Listing vulnerability found by zerodetail & ratherbland in WordPress File Manager plugin (versions <= 6.4).","date":"2020-08-26"},{"id":"f3da6294276cda3efce4da98fdfdaddcf1be4cfd","name":"WP File Manager &lt;= 6.4 - Unauthenticated Resource Access to Site Backups","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/wp-file-manager\/wp-file-manager-64-unauthenticated-resource-access-to-site-backups","description":"mndpsingh287 WP File Manager v6.4 and lower fails to restrict external access to the fm_backups directory with a .htaccess file. This results in the ability for unauthenticated users to browse and download any site backups, which sometimes include full database backups, that the plugin has taken.","date":null}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","av":"n","ac":"l","pr":"n","ui":"n","s":"u","c":"h","i":"n","a":"n","score":"7.5","severity":"h","exploitable":"3.9","impact":"3.6"},"cwe":[{"cwe":"CWE-552","name":"Files or Directories Accessible to External Parties","description":"The product makes files or directories accessible to unauthorized actors, even though they should not be."}]}},{"name":"File Manager [wp-file-manager] < 4.9","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"4.9","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"a0d4145b135ede5ebba85863200b1fde333d4153","name":"File Manager &lt;= 4.8 - Missing Authorization on AJAX Actions","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/wp-file-manager\/file-manager-48-missing-authorization-on-ajax-actions","description":"The File Manager plugin for WordPress is vulnerable to authorization bypass due to missing capability checks on various functions hooked via AJAX actions in versions up to, and including, 4.8. This makes it possible for authenticated attackers with subscriber-level permissions and above to delete back-ups and view sensitive information about back-ups.","date":null}],"impact":[]},{"name":"File Manager [wp-file-manager] < 3.1","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"3.1","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"70d9f29b5770613904cf87693bbfa7607cf59e9a","name":"File Manager &lt;= 3.0 - Unauthenticated Arbitrary File Upload\/Download","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/wp-file-manager\/file-manager-30-unauthenticated-arbitrary-file-uploaddownload","description":"The  File Manager plugin for WordPress is vulnerable to authorization bypass due to a missing capability check in the \/inc\/root.php file in versions up to, and including, 3.0. This makes it possible for unauthenticated attackers to download arbitrary files from the server and upload arbitrary files that can be used for remote code execution.","date":null}],"impact":[]}]},"updated":"1683166051"}