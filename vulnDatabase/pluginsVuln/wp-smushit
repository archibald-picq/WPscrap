{"error":0,"message":null,"data":{"name":"Smush &#8211; Lazy Load Images, Optimize &amp; Compress Images","plugin":"wp-smushit","link":"https:\/\/wordpress.org\/plugins\/wp-smushit\/","latest":"1678696740","closed":0,"vulnerability":[{"name":"Smush &#8211; Lazy Load Images, Optimize &amp; Compress Images [wp-smushit] < 2.7.6","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"2.7.6","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"CVE-2017-15079","name":"CVE-2017-15079","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2017-15079","description":"The Smush Image Compression and Optimization plugin before 2.7.6 for WordPress allows directory traversal.","date":"2017-10-06"},{"id":"7cd7fc67dbd080537fdbc52b6831ab2ce3eb97bb","name":"Smush &ndash; Lazy Load Images, Optimize &amp; Compress Images &lt;= 2.7.5 - Directory Traversal","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/wp-smushit\/smush-lazy-load-images-optimize-compress-images-275-directory-traversal","description":"The Smush Image Compression and Optimization plugin before 2.7.6 for WordPress allows directory traversal.","date":null}],"impact":{"cvss":{"version":"3.0","vector":"CVSS:3.0\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:N\/A:N","av":"n","ac":"l","pr":"n","ui":"n","s":"u","c":"h","i":"n","a":"n","score":"7.5","severity":"h","exploitable":"3.9","impact":"3.6"},"cwe":[{"cwe":"CWE-22","name":"Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')","description":"The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory."}]}},{"name":"Smush &#8211; Lazy Load Images, Optimize &amp; Compress Images [wp-smushit] < 3.9.9","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"3.9.9","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"CVE-2022-1009","name":"CVE-2022-1009","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2022-1009","description":"The Smush WordPress plugin before 3.9.9 does not sanitise and escape a configuration parameter before outputting it back in an admin page when uploading a malicious preset configuration, leading to a Reflected Cross-Site Scripting. For the attack to be successful, an attacker would need an admin to upload a malicious configuration file","date":"2022-05-30"},{"id":"83c39cf94ec504e1c79236c921142132dedf3527","name":"WordPress Smush plugin <= 3.9.8 - Reflected Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wp-smushit\/wordpress-smush-plugin-3-9-8-reflected-cross-site-scripting-xss-vulnerability","description":"Reflected Cross-Site Scripting (XSS) vulnerability discovered by Taurus Omar in WordPress Smush plugin (versions <= 3.9.8).","date":"2022-05-03"},{"id":"43093ecb00f2c946f325c63730deaca5fbed6db0","name":"Smush &ndash; Lazy Load Images, Optimize &amp; Compress Images &lt;= 3.9.8 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/wp-smushit\/smush-lazy-load-images-optimize-compress-images-398-cross-site-scripting","description":"The Smush &ndash; Lazy Load Images, Optimize &amp; Compress Images plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the &#039;name&#039; and &#039;description&#039; parameters in versions up to, and including, 3.9.8 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link. This requires an attacker to trick an administrator into uploading a malicious configuration file in order to be successful.","date":null}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","av":"n","ac":"l","pr":"n","ui":"r","s":"c","c":"l","i":"l","a":"n","score":"6.1","severity":"m","exploitable":"2.8","impact":"2.7"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"Smush &#8211; Lazy Load Images, Optimize &amp; Compress Images [wp-smushit] < 3.0.0","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"3.0.0","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"652cee930b4c5b4daf628ea8a9f3a802f0d99948","name":"WordPress Smush Image Compression and Optimization plugin <= 2.9.1 - Authenticated XSS & Phar Deserialization vulnerabilities","link":"https:\/\/patchstack.com\/database\/vulnerability\/wp-smushit\/wordpress-smush-image-compression-and-optimization-plugin-2-9-1-authenticated-xss-phar-deserialization-vulnerabilities","description":"Authenticated XSS & Phar Deserialization vulnerabilities found by RIPS Technologies in WordPress Smush Image Compression and Optimization plugin (versions <= 2.9.1).","date":"2018-12-10"}],"impact":[]},{"name":"Smush &#8211; Lazy Load Images, Optimize &amp; Compress Images [wp-smushit] < 2.7.6","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"2.7.6","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"41497e5826baf6a6bcedeca63643f2b334dba238","name":"WordPress Smush Image Compression and Optimization plugin <=2.7.5 - File Traversal vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wp-smushit\/wordpress-smush-image-compression-and-optimization-plugin-2-7-5-file-traversal-vulnerability","description":"File Traversal vulnerability found by Ricardo S\u00e1nchez in WordPress Smush Image Compression and Optimization plugin (versions <=2.7.5).","date":"2017-10-09"}],"impact":[]},{"name":"Smush &#8211; Lazy Load Images, Optimize &amp; Compress Images [wp-smushit] < 3.0.1","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"3.0.1","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"1b7b9063d6297ef0cf4d01b221d4e4da2c885eb9","name":"Smush &ndash; Lazy Load Images, Optimize &amp; Compress Images &lt;= 3.0.0 - Authenticated PHAR Deserialization","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/wp-smushit\/smush-lazy-load-images-optimize-compress-images-300-authenticated-phar-deserialization","description":"The Smush &ndash; Lazy Load Images, Optimize &amp; Compress Images plugin for WordPress is vulnerable to deserialization of untrusted input via the &#039;$log_file&#039; value in versions up to, and including 3.0.0. This makes it possible for authenticated attackers to call files using a PHAR wrapper that will deserialize the data and call arbitrary PHP Objects that can be used to perform a variety of malicious actions granted a POP chain is also present. It also requires that the attacker is successful in uploading a file with the serialized payload.","date":null}],"impact":[]},{"name":"Smush &#8211; Lazy Load Images, Optimize &amp; Compress Images [wp-smushit] < 3.0.0","description":null,"operator":{"min_version":null,"min_operator":null,"max_version":"3.0.0","max_operator":"lt","unfixed":"0","closed":"0"},"source":[{"id":"a23c3a99b0a842dcbe6bec87be8b60c8ba8bf4da","name":"Smush &ndash; Lazy Load Images, Optimize &amp; Compress Images &lt;= 2.9.1 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-plugins\/wp-smushit\/smush-lazy-load-images-optimize-compress-images-291-cross-site-scripting","description":"The Smush &ndash; Lazy Load Images, Optimize &amp; Compress Images plugin for WordPress is vulnerable to Cross-Site Scripting leading  in versions up to, and including, 2.9.1 due to insufficient input sanitization and output escaping. This makes it possible for attackers to inject malicious web scripts into the application.","date":null}],"impact":[]}]},"updated":"1683166051"}