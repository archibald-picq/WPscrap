{"error":0,"message":null,"data":{"core":"2.5","link":null,"vulnerability":[{"name":"2.5","description":null,"source":[{"id":"CVE-2017-5491","name":"CVE-2017-5491","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2017-5491","description":"wp-mail.php in WordPress before 4.7.1 might allow remote attackers to bypass intended posting restrictions via a spoofed mail server with the mail.example.com name.","date":"2017-01-14"}],"impact":{"cvss":{"version":"3.0","vector":"CVSS:3.0\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:L\/A:N","av":"n","ac":"l","pr":"n","ui":"n","s":"u","c":"n","i":"l","a":"n","score":"5.3","severity":"m","exploitable":"3.9","impact":"1.4"},"cwe":[{"cwe":"CWE-1188","name":"Insecure Default Initialization of Resource","description":"The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure."}]}},{"name":"2.5","description":null,"source":[{"id":"6bdcadf270849cbb33dd49855fca18452f54b234","name":"WordPress Core &lt; 4.7.1 -  Authorization Bypass","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-471-authorization-bypass","description":"wp-mail.php in WordPress before 4.7.1 might allow remote attackers to bypass intended posting restrictions via a spoofed mail server with the mail.example.com name.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2016-7168","name":"CVE-2016-7168","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2016-7168","description":"Cross-site scripting (XSS) vulnerability in the media_handle_upload function in wp-admin\/includes\/media.php in WordPress before 4.6.1 might allow remote attackers to inject arbitrary web script or HTML by tricking an administrator into uploading an image file that has a crafted filename.","date":"2017-01-04"}],"impact":{"cvss":{"version":"3.0","vector":"CVSS:3.0\/AV:N\/AC:L\/PR:H\/UI:R\/S:C\/C:L\/I:L\/A:N","av":"n","ac":"l","pr":"h","ui":"r","s":"c","c":"l","i":"l","a":"n","score":"4.8","severity":"m","exploitable":"1.7","impact":"2.7"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"fd9ba1fe631bbc6439b8c42ecf4003eed2500844","name":"WordPress Core &lt; 4.6.1 - Authenticated Stored Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-461-authenticated-stored-cross-site-scripting","description":"Cross-site scripting (XSS) vulnerability in the media_handle_upload function in wp-admin\/includes\/media.php in WordPress before 4.6.1 might allow remote attackers to inject arbitrary web script or HTML by tricking an administrator into uploading an image file that has a crafted filename.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-6633","name":"CVE-2012-6633","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-6633","description":"Cross-site scripting (XSS) vulnerability in wp-includes\/default-filters.php in WordPress before 3.3.3 allows remote attackers to inject arbitrary web script or HTML via an editable slug field.","date":"2014-01-20"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"5e847c163bb48b0b1cae2cf03cc06784680ad84f","name":"WordPress <= 3.3.2 - Cross Site Scripting","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-3-2-cross-site-scripting-1","description":"Because of this vulnerability in wp-includes\/default-filters.php, the attackers can inject arbitrary web script or HTML via an editable slug field.\nUpdate the plugin.","date":"2014-01-20"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"6d5b101fcc8e344ee7f5ddb067dbe016fdaa80c5","name":"WordPress Core &lt;= 3.3.2 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-332-cross-site-scripting-3","description":"Cross-site scripting (XSS) vulnerability in wp-includes\/default-filters.php in WordPress before 3.3.3 allows remote attackers to inject arbitrary web script or HTML via an editable slug field.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2011-5270","name":"CVE-2011-5270","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2011-5270","description":"wp-admin\/press-this.php in WordPress before 3.0.6 does not enforce the publish_posts capability requirement, which allows remote authenticated users to perform publish actions by leveraging the Contributor role.","date":"2014-01-20"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"a1b9450705d874883e5f4bb3632867e641d38f39","name":"WordPress <= 3.0.5","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-0-5-security-vulnerability","description":"Because of this vulnerability, remote authenticated users can perform publish actions by leveraging the Contributor role.\nUpdate WordPress.","date":"2014-01-20"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"a7fd190800ae8568a1d65a0d9887e2ecff7ecbbf","name":"WordPress Core &lt; 3.0.6 - Incorrect Authorization Checks","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-306-incorrect-authorization-checks","description":"wp-admin\/press-this.php in WordPress before 3.0.6 does not enforce the publish_posts capability requirement, which allows remote authenticated users to perform publish actions by leveraging the Contributor role.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2010-5293","name":"CVE-2010-5293","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2010-5293","description":"wp-includes\/comment.php in WordPress before 3.0.2 does not properly whitelist trackbacks and pingbacks in the blogroll, which allows remote attackers to bypass intended spam restrictions via a crafted URL, as demonstrated by a URL that triggers a substring match.","date":"2014-01-20"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"d50239dc6ac1841c95b866471b5ca1622cc1ec28","name":"WordPress <= 3.0.1","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-0-1","description":"wp-includes\/comment.php does not properly whitelist trackbacks and pingbacks in the blogroll. In that way the attackers can bypass intended spam restrictions via a crafted URL, as demonstrated by a URL that triggers a substring match.\nUpdate WordPress.","date":"2014-01-20"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"ee139ec3ea0cde6f407dd966fddcc055eba4ce73","name":"WordPress Core &lt; 3.0.2 - Spam Protection Bypass","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-302-spam-protection-bypass","description":"wp-includes\/comment.php in WordPress before 3.0.2 does not properly whitelist trackbacks and pingbacks in the blogroll, which allows remote attackers to bypass intended spam restrictions via a crafted URL, as demonstrated by a URL that triggers a substring match.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2010-5294","name":"CVE-2010-5294","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2010-5294","description":"Multiple cross-site scripting (XSS) vulnerabilities in the request_filesystem_credentials function in wp-admin\/includes\/file.php in WordPress before 3.0.2 allow remote servers to inject arbitrary web script or HTML by providing a crafted error message for a (1) FTP or (2) SSH connection attempt.","date":"2014-01-20"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"5594768b5bc56faf94e8b3c29aac5e4eda204456","name":"WordPress <= 3.0.1 - Multiple XSS","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-0-1-multiple-xss","description":"Because of these vulnerabilities, remote servers can inject arbitrary web script or HTML by providing a crafted error message for a  FTP or SSH connection attempt.\nUpdate WordPress.","date":"2014-01-20"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"b9b8530f496902c4986fc89522f53cb86fbae2c4","name":"WordPress Core &lt; 3.0.2 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-302-cross-site-scripting","description":"Multiple cross-site scripting (XSS) vulnerabilities in the request_filesystem_credentials function in wp-admin\/includes\/file.php in WordPress before 3.0.2 allow remote servers to inject arbitrary web script or HTML by providing a crafted error message for a (1) FTP or (2) SSH connection attempt.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2010-5295","name":"CVE-2010-5295","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2010-5295","description":"Cross-site scripting (XSS) vulnerability in wp-admin\/plugins.php in WordPress before 3.0.2 might allow remote attackers to inject arbitrary web script or HTML via a plugin's author field, which is not properly handled during a Delete Plugin action.","date":"2014-01-20"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"eb5151ff7b5b49cde7c4652936901eb84b52133b","name":"WordPress <= 3.0.1 - XSS","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-0-1-xss","description":"Because of this vulnerability in wp-admin\/plugins.php, the attackers can inject arbitrary web script or HTML.\nUpdate WordPress.","date":"2014-01-20"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"932e9401de664c41b236b5c811bd3129f29c53a3","name":"WordPress Core &lt; 3.0.2 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-302-cross-site-scripting-2","description":"Cross-site scripting (XSS) vulnerability in wp-admin\/plugins.php in WordPress before 3.0.2 might allow remote attackers to inject arbitrary web script or HTML via a plugin&#039;s author field, which is not properly handled during a Delete Plugin action.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2010-5296","name":"CVE-2010-5296","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2010-5296","description":"wp-includes\/capabilities.php in WordPress before 3.0.2, when a Multisite configuration is used, does not require the Super Admin role for the delete_users capability, which allows remote authenticated administrators to bypass intended access restrictions via a delete action.","date":"2014-01-20"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"eeb70d03d5c3e8b5be91a5bb016a8236571f7777","name":"WordPress <= 3.0.1 - BYPASS","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-0-1-bypass","description":"wp-includes\/capabilities.php does not require the Super Admin role for the delete_users capability that allows remote authenticated administrators to bypass intended access restrictions via a delete action.\nUpdate WordPress.","date":"2014-01-20"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"89c9b651e3a9ad86ae37c80138f9c792497dd1ef","name":"WordPress Core &lt; 3.0.2 - Missing Authorization","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-302-missing-authorization","description":"wp-includes\/capabilities.php in WordPress before 3.0.2, when a Multisite configuration is used, does not require the Super Admin role for the delete_users capability, which allows remote authenticated administrators to bypass intended access restrictions via a delete action.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2010-5297","name":"CVE-2010-5297","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2010-5297","description":"WordPress before 3.0.1, when a Multisite installation is used, permanently retains the \"site administrators can add users\" option once changed, which might allow remote authenticated administrators to bypass intended access restrictions in opportunistic circumstances via an add action after a temporary change.","date":"2014-01-20"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"a1498ba825d24c83ecc216bcc81b30fda018ec17","name":"WordPress <= 3.0.0","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-0-0","description":"A WordPress multi-site installation, permanently retains the \"site administrators can add users\" option once changed which might  allow authenticated administrators to bypass intended access restrictions in opportunistic circumstances via an \"add\" action after a temporary change.\nUpdate WordPress.","date":"2014-01-20"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"59f9e6ee6024eee1f362b34b8c91113ba07ae8bf","name":"WordPress Core &lt; 3.0.1 - Missing Authorization","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-301-missing-authorization","description":"WordPress before 3.0.1, when a Multisite installation is used, permanently retains the &quot;site administrators can add users&quot; option once changed, which might allow remote authenticated administrators to bypass intended access restrictions in opportunistic circumstances via an add action after a temporary change.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-6634","name":"CVE-2012-6634","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-6634","description":"wp-admin\/media-upload.php in WordPress before 3.3.3 allows remote attackers to obtain sensitive information or bypass intended media-attachment restrictions via a post_id value.","date":"2014-01-20"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"b6dd4f4c98ce2083230a62259f40a22e03f1281c","name":"WordPress <= 3.3.2 - Multiple Vulnerabilities","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-3-2-multiple-vulnerabilities","description":"Because of these vulnerabilities, the attackers can obtain sensitive information or bypass intended media-attachment restrictions via a \"post_id\" value.\nUpdate the plugin.","date":"2014-01-20"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"5bcb65126dbfe971a6d2aa80d3b9c17e4d169dfe","name":"WordPress Core &lt;= 3.3.2 - Sensitive Information Disclosure","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-332-sensitive-information-disclosure-2","description":"wp-admin\/media-upload.php in WordPress before 3.3.3 allows remote attackers to obtain sensitive information or bypass intended media-attachment restrictions via a post_id value.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-6635","name":"CVE-2012-6635","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-6635","description":"wp-admin\/includes\/class-wp-posts-list-table.php in WordPress before 3.3.3 does not properly restrict excerpt-view access, which allows remote authenticated users to obtain sensitive information by visiting a draft.","date":"2014-01-20"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"d4a79acbc066de6866c2dcd5f8adf5827c2588d9","name":"WordPress <= 3.3.2 - Information Disclosure","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-3-2-cross-site-scripting","description":"Because of this vulnerability, the authenticated users can obtain sensitive information by visiting a draft.\nUpdate the plugin.","date":"2014-01-20"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"7bd912fe26ca54f8f6e44d3367b7ee762f878013","name":"WordPress Core &lt;= 3.3.2 - Sensitive Information Disclosure","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-332-sensitive-information-disclosure","description":"wp-admin\/includes\/class-wp-posts-list-table.php in WordPress before 3.3.3 does not properly restrict excerpt-view access, which allows remote authenticated users to obtain sensitive information by visiting a draft.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-4338","name":"CVE-2013-4338","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-4338","description":"wp-includes\/functions.php in WordPress before 3.6.1 does not properly determine whether data has been serialized, which allows remote attackers to execute arbitrary code by triggering erroneous PHP unserialize operations.","date":"2013-09-12"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-94","name":"Improper Control of Generation of Code ('Code Injection')","description":"The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment."}]}},{"name":"2.5","description":null,"source":[{"id":"ef40514fa4e5e0121ef38d9a855490c3301905c4","name":"WordPress <= 3.6.0 - Arbitrary Code Execution","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-6-0-arbitrary-code-execution","description":"Unsafe PHP unserialization in wp-includes\/functions.php could cause arbitrary code execution.\nUpdate the plugin.","date":"2013-06-12"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"78c4390ca55b224fc81635d7d8e04895d8b9b0f7","name":"WordPress Core &lt; 3.6.1 - Deserialization","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-361-deserialization","description":"wp-includes\/functions.php in WordPress before 3.6.1 does not properly determine whether data has been serialized, which allows remote attackers to execute arbitrary code by triggering erroneous PHP unserialize operations.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-5738","name":"CVE-2013-5738","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-5738","description":"The get_allowed_mime_types function in wp-includes\/functions.php in WordPress before 3.6.1 does not require the unfiltered_html capability for uploads of .htm and .html files, which might make it easier for remote authenticated users to conduct cross-site scripting (XSS) attacks via a crafted file.","date":"2013-09-12"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-20","name":"Improper Input Validation","description":"The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly."}]}},{"name":"2.5","description":null,"source":[{"id":"3bde52566ba5fa14150740500a20751b7d4e468c","name":"WordPress <= 3.6.0 - Cross Site Scripting #2","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-6-0-cross-site-scripting-2","description":"Because of this vulnerability,  remote authenticated users can conduct cross-site scripting attacks via a crafted file, that is related to the get_allowed_mime_types function in wp-includes\/functions.php.\nUpdate WordPress.","date":"2013-09-11"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"3e5bc53fc053ceff49a52269bcbe5c2212342b9c","name":"WordPress Core &lt; 3.6.1 - HTML File Upload","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-361-html-file-upload","description":"The get_allowed_mime_types function in wp-includes\/functions.php in WordPress before 3.6.1 does not require the unfiltered_html capability for uploads of .htm and .html files, which might make it easier for remote authenticated users to conduct cross-site scripting (XSS) attacks via a crafted file.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-5739","name":"CVE-2013-5739","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-5739","description":"The default configuration of WordPress before 3.6.1 does not prevent uploads of .swf and .exe files, which might make it easier for remote authenticated users to conduct cross-site scripting (XSS) attacks via a crafted file, related to the get_allowed_mime_types function in wp-includes\/functions.php.","date":"2013-09-12"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"3fbfdcbd6301692db9ac1871c01f0a028ae86100","name":"WordPress <= 3.6.0 - Cross Site Scripting #1","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-6-0-multiple-vulnerabilities","description":"Because of this vulnerability,  remote authenticated users can conduct cross-site scripting attacks.\nUpdate WordPress.","date":"2013-09-11"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"07c077a7fd8b8f69e531a5d3d82cda362a75a507","name":"WordPress Core &lt; 3.6.1 - .swf and .exe File Upload","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-361-swf-and-exe-file-upload","description":"The default configuration of WordPress before 3.6.1 does not prevent uploads of .swf and .exe files, which might make it easier for remote authenticated users to conduct cross-site scripting (XSS) attacks via a crafted file, related to the get_allowed_mime_types function in wp-includes\/functions.php.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-4339","name":"CVE-2013-4339","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-4339","description":"WordPress before 3.6.1 does not properly validate URLs before use in an HTTP redirect, which allows remote attackers to bypass intended redirection restrictions via a crafted string.","date":"2013-09-12"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-20","name":"Improper Input Validation","description":"The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly."}]}},{"name":"2.5","description":null,"source":[{"id":"90f48ad5321b349dde6edba61532dc03bc6d5488","name":"WordPress <= 3.6.0 - Multiple vulnerabilities","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-6-0-multiple-vulnerabilities-1","description":"The attackers can bypass intended redirection restrictions via a crafted string, because this WordPress version (and lower versions too) does not properly validate URLs before use in an HTTP redirect.\nUpdate the plugin.","date":"2013-06-12"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"290daa250b78c2199bc1f7bd90c24a53f6770af2","name":"WordPress Core &lt; 3.6.1 - Open Redirect","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-361-open-redirect","description":"WordPress before 3.6.1 does not properly validate URLs before use in an HTTP redirect, which allows remote attackers to bypass intended redirection restrictions via a crafted string.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-4340","name":"CVE-2013-4340","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-4340","description":"wp-admin\/includes\/post.php in WordPress before 3.6.1 allows remote authenticated users to spoof the authorship of a post by leveraging the Author role and providing a modified user_ID parameter.","date":"2013-09-12"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"3487ea046941fddb1765efbed2d35187ff8f5847","name":"WordPress <= 3.6.0 - Privilege Escalation","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-6-0-privilege-escalation","description":"Because of this vulnerability, the authors can create an entry appearing as written by another user.\nUpdate the plugin.","date":"2013-09-09"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"4936f933eda9193904f22de951f18924d9b3c929","name":"WordPress Core &lt; 3.6.1 - Spoof Post Authorship","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-361-spoof-post-authorship","description":"wp-admin\/includes\/post.php in WordPress before 3.6.1 allows remote authenticated users to spoof the authorship of a post by leveraging the Author role and providing a modified user_ID parameter.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-3414","name":"CVE-2012-3414","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-3414","description":"Cross-site scripting (XSS) vulnerability in swfupload.swf in SWFUpload 2.2.0.1 and earlier, as used in WordPress before 3.3.2, TinyMCE Image Manager 1.1, and other products, allows remote attackers to inject arbitrary web script or HTML via the movieName parameter, related to the \"ExternalInterface.call\" function.","date":"2013-07-19"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"8ad2c96e392453da274c750904adb22149559bd5","name":"WordPress SWFUpload Plugin <= 2.2.0.1 - XSS #1","link":"https:\/\/patchstack.com\/database\/vulnerability\/swfupload\/wordpress-swfupload-plugin-2-2-0-1-xss","description":"Because of this vulnerability in swfupload.swf, the attackers can inject arbitrary web script or HTML via the \"movieName\" parameter.\nUpdate the plugin.","date":"2012-06-14"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"9dc6b1bdd6967f8697a5f4e8d898720353f4fb5f","name":"SWFUpload &lt;= 2.2.0.1 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/detail\/swfupload-2201-cross-site-scripting","description":"Cross-site scripting (XSS) vulnerability in swfupload.swf in SWFUpload 2.2.0.1 and earlier, as used in WordPress before 3.3.2, TinyMCE Image Manager 1.1, and other products, allows remote attackers to inject arbitrary web script or HTML via the movieName parameter, related to the &quot;ExternalInterface.call&quot; function.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"386f72cc3ce1e6e5ddbcf9e7d137a6b3f4c276c3","name":"WordPress Core &lt;= 3.3.1 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-331-cross-site-scripting-2","description":"Cross-site scripting (XSS) vulnerability in swfupload.swf in SWFUpload 2.2.0.1 and earlier, as used in WordPress before 3.3.2, TinyMCE Image Manager 1.1, and other products, allows remote attackers to inject arbitrary web script or HTML via the movieName parameter, related to the &quot;ExternalInterface.call&quot; function.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-2199","name":"CVE-2013-2199","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-2199","description":"The HTTP API in WordPress before 3.5.2 allows remote attackers to send HTTP requests to intranet servers via unspecified vectors, related to a Server-Side Request Forgery (SSRF) issue, a similar vulnerability to CVE-2013-0235.","date":"2013-07-08"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"73f96c190e300ac6b5e692d2d39fc364b37f6742","name":"WordPress <= 3.5.1 - Multiple SSRF","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-5-1-multiple-ssrf","description":"Because of these vulnerabilities, the attackers can send HTTP requests to intranet servers via unspecified vectors.\nUpdate WordPress.","date":"2013-02-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"5abbf896dfad870f5d96523fdc7c9a4eb5d9b61b","name":"WordPress Core &lt; 3.5.2 -  Server Side Request Forgery","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-352-server-side-request-forgery","description":"The HTTP API in WordPress before 3.5.2 allows remote attackers to send HTTP requests to intranet servers via unspecified vectors, related to a Server-Side Request Forgery (SSRF) issue, a similar vulnerability to CVE-2013-0235.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-0235","name":"CVE-2013-0235","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-0235","description":"The XMLRPC API in WordPress before 3.5.1 allows remote attackers to send HTTP requests to intranet servers, and conduct port-scanning attacks, by specifying a crafted source URL for a pingback, related to a Server-Side Request Forgery (SSRF) issue.","date":"2013-07-08"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"2036a072e507df96bd6c492cb05ae26837b3f375","name":"WordPress <=  3.5.0  - SSRF","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-5-0-ssrf","description":"Because of The XMLRPC API, the attackers can send HTTP requests to intranet servers. Also, they can conduct port-scanning attacks by specifying a crafted source URL for a pingback.\nUpdate WordPress.","date":"2012-12-06"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"78fda6b0877a290321e89615b6d73a2d31e20285","name":"WordPress Core &lt; 3.5.1 - Server-Side Request Forgery","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-351-server-side-request-forgery","description":"The XMLRPC API in WordPress before 3.5.1 allows remote attackers to send HTTP requests to intranet servers, and conduct port-scanning attacks, by specifying a crafted source URL for a pingback, related to a Server-Side Request Forgery (SSRF) issue.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-2201","name":"CVE-2013-2201","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-2201","description":"Multiple cross-site scripting (XSS) vulnerabilities in WordPress before 3.5.2 allow remote attackers to inject arbitrary web script or HTML via vectors involving (1) uploads of media files, (2) editing of media files, (3) installation of plugins, (4) updates to plugins, (5) installation of themes, or (6) updates to themes.","date":"2013-07-08"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"12780094ff52e51e55f3f7584e86609313a54457","name":"WordPress <= 3.5.1 - Multiple Cross Site Scripting","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-5-1-multiple-cross-site-scripting","description":"Because of these vulnerabilities, the attackers can inject arbitrary web script or HTML.\nUpdate the plugin.","date":"2013-02-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"eeacf89c9375e9a07f04a7b81ef81618cf56a3eb","name":"WordPress Core &lt; 3.5.2 - Cross-Site Scripting via Multiple Vectors","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-352-cross-site-scripting-via-multiple-vectors","description":"Multiple cross-site scripting (XSS) vulnerabilities in WordPress before 3.5.2 allow remote attackers to inject arbitrary web script or HTML via vectors involving (1) uploads of media files, (2) editing of media files, (3) installation of plugins, (4) updates to plugins, (5) installation of themes, or (6) updates to themes.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-2202","name":"CVE-2013-2202","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-2202","description":"WordPress before 3.5.2 allows remote attackers to read arbitrary files via an oEmbed XML provider response containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.","date":"2013-07-08"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-200","name":"Exposure of Sensitive Information to an Unauthorized Actor","description":"The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information."}]}},{"name":"2.5","description":null,"source":[{"id":"7c245867249f5bce095d196cdcb6b1db6b93a4db","name":"WordPress <= 3.5.1 - External Entity Injection","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-5-1-external-entity-injection","description":"Because of this vulnerability, the attackers can read arbitrary files via an oEmbed XML provider response containing an external entity declaration in conjunction with an entity reference.\nUpdate the plugin.","date":"2013-02-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"33f885c16db00f7429190d60a5cd637ef2fff731","name":"WordPress Core &lt; 3.5.2 - XXE Injection","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-352-xxe-injection","description":"WordPress before 3.5.2 allows remote attackers to read arbitrary files via an oEmbed XML provider response containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-2200","name":"CVE-2013-2200","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-2200","description":"WordPress before 3.5.2 does not properly check the capabilities of roles, which allows remote authenticated users to bypass intended restrictions on publishing and authorship reassignment via unspecified vectors.","date":"2013-07-08"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"7675d56772b44a52ebae432efc52a7d486850880","name":"WordPress <= 3.5.1 - Privilege Escalation","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-5-1-privilege-escalation","description":"Because of this vulnerability, the authenticated users can bypass intended restrictions on publishing and authorship reassignment via unspecified vectors.\nUpdate the plugin.","date":"2013-02-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"4b925bfc1375876f5a1e0f74fd26d3add0738eb6","name":"WordPress Core &lt; 3.5.2 -  Missing Authorization Checks","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-352-missing-authorization-checks","description":"WordPress before 3.5.2 does not properly check the capabilities of roles, which allows remote authenticated users to bypass intended restrictions on publishing and authorship reassignment via unspecified vectors.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-0236","name":"CVE-2013-0236","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-0236","description":"Multiple cross-site scripting (XSS) vulnerabilities in WordPress before 3.5.1 allow remote attackers to inject arbitrary web script or HTML via vectors involving (1) gallery shortcodes or (2) the content of a post.","date":"2013-07-08"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"1630a796f093404b2c57b36e8c3fab07c3880ae0","name":"WordPress <= 3.5.0  - Multiple Cross Site Scripting","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-5-0-multiple-cross-site-scripting","description":"Because of these vulnerabilities, the attackers can inject arbitrary web script or HTML.\nUpdate the plugin.","date":"2012-12-06"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"ed648f947cac2d2ace1af0ded29bebf7299af9a3","name":"WordPress Core &lt; 3.5.1 - Stored Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-351-stored-cross-site-scripting","description":"Multiple cross-site scripting (XSS) vulnerabilities in WordPress before 3.5.1 allow remote attackers to inject arbitrary web script or HTML via vectors involving (1) gallery shortcodes or (2) the content of a post.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-0237","name":"CVE-2013-0237","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-0237","description":"Cross-site scripting (XSS) vulnerability in Plupload.as in Moxiecode plupload before 1.5.5, as used in WordPress before 3.5.1 and other products, allows remote attackers to inject arbitrary web script or HTML via the id parameter.","date":"2013-07-08"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"71240635dd4cf363ab76c7796b06d00e0ff075f6","name":"WordPress <= 1.5.4 - Cross Site Scripting","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-1-5-4-cross-site-scripting","description":"Because of this vulnerability, the attackers can inject arbitrary web script or HTML via the \"id\" parameter.\nUpdate the plugin.","date":"2012-12-06"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"3f3dc8eda18a79f3de9ce460a4b278602c6c9d71","name":"WordPress Core &lt; 3.5.1 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-351-cross-site-scripting","description":"Cross-site scripting (XSS) vulnerability in Plupload.as in Moxiecode plupload before 1.5.5, as used in WordPress before 3.5.1 and other products, allows remote attackers to inject arbitrary web script or HTML via the id parameter.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-2203","name":"CVE-2013-2203","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-2203","description":"WordPress before 3.5.2, when the uploads directory forbids write access, allows remote attackers to obtain sensitive information via an invalid upload request, which reveals the absolute path in an XMLHttpRequest error message.","date":"2013-07-08"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"c4ff832507a21f965a75ab1809c8127485e21b43","name":"WordPress <= 3.5.1 - Full Path Disclosure","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-5-1-full-path-disclosure-1","description":"Because of this vulnerability, the attackers can obtain sensitive information via an invalid upload request.\nUpdate the plugin.","date":"2013-02-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"e4e6e3b626bfb568d19145f48d24c28fe7c4d723","name":"WordPress <= 3.5.1 - Full Path Disclosure","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-5-1-full-path-disclosure","description":"Because of this vulnerability, the attackers can obtain sensitive information via an invalid upload request.\nUpdate the plugin.","date":"2013-02-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"681e53bf1df6bd5ebcd861fd08f7772cc86f4ac9","name":"WordPress Core &lt; 3.5.2 - Sensitive Information Disclosure","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-352-sensitive-information-disclosure","description":"WordPress before 3.5.2, when the uploads directory forbids write access, allows remote attackers to obtain sensitive information via an invalid upload request, which reveals the absolute path in an XMLHttpRequest error message.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-2204","name":"CVE-2013-2204","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-2204","description":"moxieplayer.as in Moxiecode moxieplayer, as used in the TinyMCE Media plugin in WordPress before 3.5.2 and other products, does not consider the presence of a # (pound sign) character during extraction of the QUERY_STRING, which allows remote attackers to pass arbitrary parameters to a Flash application, and conduct content-spoofing attacks, via a crafted string after a ? (question mark) character.","date":"2013-07-08"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-20","name":"Improper Input Validation","description":"The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly."}]}},{"name":"2.5","description":null,"source":[{"id":"e52ee3147074ff7945dfb8fce210b7b475e37c38","name":"WordPress TinyMCE Media  Plugin <= 3.5.1 - Content Spoofing","link":"https:\/\/patchstack.com\/database\/vulnerability\/tinymce-media\/wordpress-tinymce-media-plugin-3-5-1-content-spoofing","description":"A moxieplayer.as does not consider the presence of a # character during extraction of the QUERY_STRING. In that way the attackers can pass arbitrary parameters to a Flash application and conduct content-spoofing attacks.\nUpdate the plugin.","date":"2013-02-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"5e0aaa174034db969db06441c2b551aab88c774d","name":"WordPress Core &lt;= 3.5.1 - Content-Spoofing Attacks","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-351-content-spoofing-attacks","description":"moxieplayer.as in Moxiecode moxieplayer, as used in the TinyMCE Media plugin in WordPress before 3.5.2 and other products, does not consider the presence of a # (pound sign) character during extraction of the QUERY_STRING, which allows remote attackers to pass arbitrary parameters to a Flash application, and conduct content-spoofing attacks, via a crafted string after a ? (question mark) character.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-2205","name":"CVE-2013-2205","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-2205","description":"The default configuration of SWFUpload in WordPress before 3.5.2 has an unrestrictive security.allowDomain setting, which allows remote attackers to bypass the Same Origin Policy and conduct cross-site scripting (XSS) attacks via a crafted web site.","date":"2013-07-08"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"82176f1306af4fd0de7324943adda3dde5630087","name":"WordPress SWFUpload Plugin <= 3.5.1 - XSS","link":"https:\/\/patchstack.com\/database\/vulnerability\/swfupload\/wordpress-swfupload-plugin-3-5-1-xss","description":"This plugin is prone to a cross site scripting vulnerability.\nUpdate the plugin.","date":"2013-02-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"67598e5698b1c7a4fb98bf274a17b0588679caad","name":"WordPress Core &lt; 3.5.2 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-352-cross-site-scripting","description":"The default configuration of SWFUpload in WordPress before 3.5.2 has an unrestrictive security.allowDomain setting, which allows remote attackers to bypass the Same Origin Policy and conduct cross-site scripting (XSS) attacks via a crafted web site.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-2173","name":"CVE-2013-2173","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-2173","description":"wp-includes\/class-phpass.php in WordPress 3.5.1, when a password-protected post exists, allows remote attackers to cause a denial of service (CPU consumption) via a crafted value of a certain wp-postpass cookie.","date":"2013-06-21"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"c1301c1db30cd87cd7f9d5cc4e31123235fcfbf5","name":"WordPress <= 3.5.1 - Denial of Service Attacks","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-5-1-denial-of-service-attacks","description":"This WordPress version is prone to denial of service attacks via a crafted value of a certain wp-postpass cookie.\nUpdate WordPress.","date":"2013-02-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"09f1857ade1208151cb058ce88cb451833ef179e","name":"WordPress Core &lt;= 3.5.1 - Denial of Service via wp-postpass cookie","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-351-denial-of-service-via-wp-postpass-cookie","description":"wp-includes\/class-phpass.php in WordPress 3.5.1, when a password-protected post exists, allows remote attackers to cause a denial of service (CPU consumption) via a crafted value of a certain wp-postpass cookie.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-5868","name":"CVE-2012-5868","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-5868","description":"WordPress 3.4.2 does not invalidate a wordpress_sec session cookie upon an administrator's logout action, which makes it easier for remote attackers to discover valid session identifiers via a brute-force attack, or modify data via a replay attack.","date":"2012-12-27"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-200","name":"Exposure of Sensitive Information to an Unauthorized Actor","description":"The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information."}]}},{"name":"2.5","description":null,"source":[{"id":"43a16e6ebe32923310a8286879c24cf6d753fdde","name":"WordPress <= 3.4.2","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-4-2","description":"The attackers can discover valid session identifiers via a brute-force attack, because this WordPress version does not invalidate a wordpress_sec session cookie upon an administrator's logout action.\nThe application should keep track of session identifiers where a user has explicitly logged out and prevent those sessions from connecting to the application.","date":"2012-11-14"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"713434a8651ef4f30c91227cb42f8e1d991394be","name":"WordPress Core &lt;= 3.4.2 - Missing Session Cookie Expiration","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-342-missing-session-cookie-expiration","description":"WordPress 3.4.2 does not invalidate a wordpress_sec session cookie upon an administrator&#039;s logout action, which makes it easier for remote attackers to discover valid session identifiers via a brute-force attack, or modify data via a replay attack.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-4448","name":"CVE-2012-4448","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-4448","description":"Cross-site request forgery (CSRF) vulnerability in wp-admin\/index.php in WordPress 3.4.2 allows remote attackers to hijack the authentication of administrators for requests that modify an RSS URL via a dashboard_incoming_links edit action.","date":"2012-09-28"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-352","name":"Cross-Site Request Forgery (CSRF)","description":"The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."}]}},{"name":"2.5","description":null,"source":[{"id":"cc95d9a415eb3abb3ff326e1e108cc639b2420e3","name":"WordPress <= 3.4.2 - CSRF","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-4-2-csrf","description":"Because of this vulnerability in wp-admin\/index.php, the attackers can hijack the authentication of administrators for requests.\nUpdate WordPress.","date":"2012-08-21"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2010-5106","name":"CVE-2010-5106","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2010-5106","description":"The XML-RPC remote publishing interface in xmlrpc.php in WordPress before 3.0.3 does not properly check capabilities, which allows remote authenticated users to bypass intended access restrictions, and publish, edit, or delete posts, by leveraging the Author or Contributor role.","date":"2012-09-14"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"1df4986c3d8f3531f1be6c50cad400b266673d6c","name":"WordPress <= 3.0.2 - BYPASS","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-0-2-bypass","description":"Because of this vulnerability, authenticated users can bypass intended access restrictions, and publish, edit or delete posts.\nUpdate WordPress.","date":"2012-04-30"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"6692c8f249f453099938c2a1b0a2cf27ea7c67ec","name":"WordPress Core &lt; 3.0.3 - Access Control Bypass","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-303-access-control-bypass","description":"The XML-RPC remote publishing interface in xmlrpc.php in WordPress before 3.0.3 does not properly check capabilities, which allows remote authenticated users to bypass intended access restrictions, and publish, edit, or delete posts, by leveraging the Author or Contributor role.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-4421","name":"CVE-2012-4421","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-4421","description":"The create_post function in wp-includes\/class-wp-atom-server.php in WordPress before 3.4.2 does not perform a capability check, which allows remote authenticated users to bypass intended access restrictions and publish new posts by leveraging the Contributor role and using the Atom Publishing Protocol (aka AtomPub) feature.","date":"2012-09-14"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"1af63fa7955ce4103976b426f4ce40a4607c931d","name":"WordPress <= 3.4.1 - BYPASS","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-4-1-bypass","description":"Because of this vulnerability,  remote authenticated users can bypass intended access restrictions and publish new posts by leveraging the Contributor role and using the Atom Publishing Protocol feature.\nUpdate the plugin.","date":"2012-08-21"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"e999086557f40875b97e8cf36004c63db84da83b","name":"WordPress Core &lt; 3.4.2 - Missing Authorization Checks on create_post","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-342-missing-authorization-checks-on-create-post","description":"The create_post function in wp-includes\/class-wp-atom-server.php in WordPress before 3.4.2 does not perform a capability check, which allows remote authenticated users to bypass intended access restrictions and publish new posts by leveraging the Contributor role and using the Atom Publishing Protocol (aka AtomPub) feature.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-4422","name":"CVE-2012-4422","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-4422","description":"wp-admin\/plugins.php in WordPress before 3.4.2, when the multisite feature is enabled, does not check for network-administrator privileges before performing a network-wide activation of an installed plugin, which might allow remote authenticated users to make unintended plugin changes by leveraging the Administrator role.","date":"2012-09-14"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"71abf2cfa4e5fddb1da3a845ddad98fae6130a4b","name":"WordPress <= 3.4.1 - Multiple vulnerabilities","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-4-1-multiple-vulnerabilities","description":"Multiple vulnerabilities are in the wp-admin\/plugins.php. Because of that, remote authenticated users can make unintended plugin changes by leveraging the Administrator role.\nUpdate WordPress.","date":"2012-08-21"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"4b20ef9f5a78238337cb61ecc94185da2e0f19d0","name":"WordPress Core &lt; 3.4.2 - Missing Authorization Checks","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-342-missing-authorization-checks","description":"wp-admin\/plugins.php in WordPress before 3.4.2, when the multisite feature is enabled, does not check for network-administrator privileges before performing a network-wide activation of an installed plugin, which might allow remote authenticated users to make unintended plugin changes by leveraging the Administrator role.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-3383","name":"CVE-2012-3383","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-3383","description":"The map_meta_cap function in wp-includes\/capabilities.php in WordPress 3.4.x before 3.4.2, when the multisite feature is enabled, does not properly assign the unfiltered_html capability, which allows remote authenticated users to bypass intended access restrictions and conduct cross-site scripting (XSS) attacks by leveraging the Administrator or Editor role and composing crafted text.","date":"2012-07-22"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"1fa4acd1f0841297ff7878afea5a87526b391fbd","name":"WordPress <= 3.4.1 - XSS and BYPASS","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-4-1-xss-and-bypass","description":"Because of these vulnerabilities, authenticated users can perform cross-site scripting attacks by leveraging the Administrator or Editor role and composing crafted text and bypass intended access restrictions.\nUpdate WordPress.","date":"2012-06-14"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"792aed46f8c7470e5ce5a4774c446b41c177b762","name":"WordPress Core &lt; 3.4.2 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-342-cross-site-scripting","description":"The map_meta_cap function in wp-includes\/capabilities.php in WordPress 3.4.x before 3.4.2, when the multisite feature is enabled, does not properly assign the unfiltered_html capability, which allows remote authenticated users to bypass intended access restrictions and conduct cross-site scripting (XSS) attacks by leveraging the Administrator or Editor role and composing crafted text.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-3384","name":"CVE-2012-3384","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-3384","description":"Cross-site request forgery (CSRF) vulnerability in the customizer in WordPress before 3.4.1 allows remote attackers to hijack the authentication of unspecified victims via unknown vectors.","date":"2012-07-22"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-352","name":"Cross-Site Request Forgery (CSRF)","description":"The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."}]}},{"name":"2.5","description":null,"source":[{"id":"e07cb91596adb7b71e29c322c47696e193942ee0","name":"WordPress <= 3.4.0 - CSRF","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-4-0-csrf","description":"Because of this vulnerability, the attackers can hijack the authentication of unspecified victims via unknown vectors.\nUpdate WordPress.","date":"2012-06-14"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"4266eddff30272d67d5376dcaa83c53ee1f17bbe","name":"WordPress Core &lt; 3.4.1 - Cross-Site Request Forgery","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-341-cross-site-request-forgery","description":"Cross-site request forgery (CSRF) vulnerability in the customizer in WordPress before 3.4.1 allows remote attackers to hijack the authentication of unspecified victims via unknown vectors.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-3385","name":"CVE-2012-3385","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-3385","description":"WordPress before 3.4.1 does not properly restrict access to post contents such as private or draft posts, which allows remote authors or contributors to obtain sensitive information via unknown vectors.","date":"2012-07-22"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"6dc90c26332e2274b63a90bae8886ab67c017237","name":"WordPress <= 3.4.0 - Multiple Vulnerabilities","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-4-0-multiple-vulnerabilities","description":"Because of multiple vulnerabilities in this version of WordPress, remote authors or contributors can obtain sensitive information via unknown vectors.\nUpdate WordPress.","date":"2012-06-14"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"17e6a6d3ed6f5e687e20c9a396139a5008a52059","name":"WordPress Core &lt; 3.4.1 - Information Disclosure","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-341-information-disclosure","description":"WordPress before 3.4.1 does not properly restrict access to post contents such as private or draft posts, which allows remote authors or contributors to obtain sensitive information via unknown vectors.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2011-4956","name":"CVE-2011-4956","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2011-4956","description":"Cross-site scripting (XSS) vulnerability in WordPress before 3.1.1 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.","date":"2012-06-27"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"01bc89b7c3d4baed0ab1c8ce4881306045bd44bb","name":"WordPress <= 3.1.0 - Cross Site Scripting","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-1-0-cross-site-scripting","description":"Because of this vulnerability, the attackers can inject arbitrary web script or HTML via unspecified vectors.\nUpdate WordPress.","date":"2011-12-23"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"6a2f970254ae46b0f62812b401c38453c4b1aa65","name":"WordPress Core &lt;= 3.1 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-31-cross-site-scripting","description":"Cross-site scripting (XSS) vulnerability in WordPress before 3.1.1 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2011-4957","name":"CVE-2011-4957","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2011-4957","description":"The make_clickable function in wp-includes\/formatting.php in WordPress before 3.1.1 does not properly check URLs before passing them to the PCRE library, which allows remote attackers to cause a denial of service (crash) via a comment with a crafted URL that triggers many recursive calls.","date":"2012-06-27"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-20","name":"Improper Input Validation","description":"The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly."}]}},{"name":"2.5","description":null,"source":[{"id":"133e9fd9590c3e289f74322c7cb81ec087f781f4","name":"WordPress <= 3.1.0 - Multiple Vulnerabilities","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-1-0-multiple-vulnerabilities","description":"The attackers can cause a denial of service  via a comment with a crafted URL that triggers many recursive calls, because the make_clickable function in wp-includes\/formatting.php does not properly check URLs before passing them to the PCRE library.\nUpdate WordPress.","date":"2011-12-23"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"e814ad8a8b69edfab5693d5405f624fb913ef495","name":"WordPress Core &lt; 3.1.1 - Denial of Service","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-311-denial-of-service","description":"The make_clickable function in wp-includes\/formatting.php in WordPress before 3.1.1 does not properly check URLs before passing them to the PCRE library, which allows remote attackers to cause a denial of service (crash) via a comment with a crafted URL that triggers many recursive calls.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-1936","name":"CVE-2012-1936","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-1936","description":"** DISPUTED ** The wp_create_nonce function in wp-includes\/pluggable.php in WordPress 3.3.1 and earlier associates a nonce with a user account instead of a user session, which might make it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks on specific actions and objects by sniffing the network, as demonstrated by attacks against the wp-admin\/admin-ajax.php and wp-admin\/user-new.php scripts.  NOTE: the vendor reportedly disputes the significance of this issue because wp_create_nonce operates as intended, even if it is arguably inconsistent with certain CSRF protection details advocated by external organizations.","date":"2012-05-03"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-352","name":"Cross-Site Request Forgery (CSRF)","description":"The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."}]}},{"name":"2.5","description":null,"source":[{"id":"3740570bd85f0580b0bade1b1f72e7d5bac7093c","name":"WordPress 3.3.1 - Multiple CSRF Vulnerabilities","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-3-1-multiple-csrf-vulnerabilities","description":"WordPress version 3.3.1 is prone to a multiple cross site request forgery vulnerabilities. These vulnerabilities are caused by  a security flaw in anti-CSRF token (_wpnonce, _wpnonce_create-user, _ajax_nonce,  _wpnonce-custom-background-upload, _wpnonce-custom-header-upload) generation. Multiple CSRF allow an attacker to change Site Address, when an authenticated user\/admin  browses a special crafted web page, change post title, add  administrators\/users,  delete administrators\/users,  change site title, change administrator's email,  change Wordpress Address, also, approve and unapprove comment, delete comment, change background image, insert custom header image.\nUpdate WordPress.","date":"2012-04-27"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-2399","name":"CVE-2012-2399","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-2399","description":"Cross-site scripting (XSS) vulnerability in swfupload.swf in SWFupload 2.2.0.1 and earlier, as used in WordPress before 3.5.2, TinyMCE Image Manager 1.1 and earlier, and other products allows remote attackers to inject arbitrary web script or HTML via the buttonText parameter, a different vulnerability than CVE-2012-3414.","date":"2012-04-21"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"JVNDB-2012-002110","name":"WordPress vulnerable to cross-site scripting","link":"http:\/\/jvndb.jvn.jp\/jvndb\/JVNDB-2012-002110","description":"WordPress contains a cross-site scripting vulnerability due to an issue in the SWFUpload library.  ma.la reported this vulnerability to IPA. JPCERT\/CC coordinated with the developer under Information Security Early Warning Partnership.\n\nSolution: [Apply an update] Update to the latest version according to the information provided by the developer.","date":"2013-07-26"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"5f1cba7d3c28cd0ea6fd9b13a057d6f0aa3a19ce","name":"WordPress SWFUpload Plugin <= 2.2.0.1 - XSS #2","link":"https:\/\/patchstack.com\/database\/vulnerability\/swfupload\/wordpress-swfupload-plugin-2-2-0-1-xss-2","description":"Because of this vulnerability in swfupload.swf, the attackers can inject arbitrary web script or HTML via the \"buttonText\" parameter.\nUpdate the plugin.","date":"2012-04-21"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"d454722403c0d57f59b2a1a61c3d34a1a9c09528","name":"WordPress Core &lt;= 3.5.1 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-351-cross-site-scripting-2","description":"Cross-site scripting (XSS) vulnerability in swfupload.swf in SWFupload 2.2.0.1 and earlier, as used in WordPress before 3.5.2, TinyMCE Image Manager 1.1 and earlier, and other products allows remote attackers to inject arbitrary web script or HTML via the buttonText parameter, a different vulnerability than CVE-2012-3414.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-2400","name":"CVE-2012-2400","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-2400","description":"Unspecified vulnerability in wp-includes\/js\/swfobject.js in WordPress before 3.3.2 has unknown impact and attack vectors.","date":"2012-04-21"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"b4e281237de5757994ed66f523fd09188ae8c672","name":"WordPress <= 3.3.1 - Unspecified vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-3-1-unspecified-vulnerability","description":"There is an unspecified vulnerability in wp-includes\/js\/swfobject.js, that has unknown impact and attack vectors.\nUpdate WordPress.","date":"2012-04-21"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"668494b72cda07604851444293919f646af3bb0d","name":"WordPress Core &lt; 3.3.2 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-332-cross-site-scripting-2","description":"Unspecified vulnerability in wp-includes\/js\/swfobject.js in WordPress before 3.3.2 has unknown impact and attack vectors.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-2401","name":"CVE-2012-2401","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-2401","description":"Plupload before 1.5.4, as used in wp-includes\/js\/plupload\/ in WordPress before 3.3.2 and other products, enables scripting regardless of the domain from which the SWF content was loaded, which allows remote attackers to bypass the Same Origin Policy via crafted content.","date":"2012-04-21"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"03ecb0205c88a624d30eef0d752dcfa4d3e9582a","name":"WordPress <= 3.3.1 - CSRF and XSS","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-3-1-csrf-and-xss","description":"There are cross site scripting and cross site request forgery vulnerabilities via SWF Applets.\nUpdate WordPress.","date":"2012-04-21"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"c56884ffcef87f3649037af0ab8b51195638a28d","name":"WordPress Core &lt;= 3.3.1 - Same Origin Policy Bypass","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-331-same-origin-policy-bypass","description":"Plupload before 1.5.4, as used in wp-includes\/js\/plupload\/ in WordPress before 3.3.2 and other products, enables scripting regardless of the domain from which the SWF content was loaded, which allows remote attackers to bypass the Same Origin Policy via crafted content.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-2402","name":"CVE-2012-2402","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-2402","description":"wp-admin\/plugins.php in WordPress before 3.3.2 allows remote authenticated site administrators to bypass intended access restrictions and deactivate network-wide plugins via unspecified vectors.","date":"2012-04-21"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"685e5a3a7c44a39a07b2b5ed91c9c87d6d3c718b","name":"WordPress <= 3.3.1 - BYPASS","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-3-1-bypass","description":"This vulnerability allows the authenticated site administrators to bypass intended access restrictions via unspecified vectors.\nUpdate WordPress.","date":"2012-04-21"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"50231730c3d4f4aeab80cb63ce3c62ab9d80df10","name":"WordPress Core &lt; 3.3.2 - Authorization Bypass","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-332-authorization-bypass","description":"wp-admin\/plugins.php in WordPress before 3.3.2 allows remote authenticated site administrators to bypass intended access restrictions and deactivate network-wide plugins via unspecified vectors.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-2403","name":"CVE-2012-2403","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-2403","description":"wp-includes\/formatting.php in WordPress before 3.3.2 attempts to enable clickable links inside attributes, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via unspecified vectors.","date":"2012-04-21"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"dde4892e57c6dd1de125d3b2080ae714eabe69b8","name":"WordPress <= 3.3.1 - XSS #2","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-3-1-xss-1","description":"The attackers can conduct cross-site scripting attacks via unspecified vectors, because of wp-includes\/formatting.php in attempts to enable clickable links inside attributes.\nUpdate WordPress.","date":"2012-04-21"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"3624155e4e5668e3525e4ee3f490ef7a11f4d100","name":"WordPress Core &lt; 3.3.2 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-332-cross-site-scripting","description":"wp-includes\/formatting.php in WordPress before 3.3.2 attempts to enable clickable links inside attributes, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via unspecified vectors.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-2404","name":"CVE-2012-2404","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-2404","description":"wp-comments-post.php in WordPress before 3.3.2 supports offsite redirects, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via unspecified vectors.","date":"2012-04-21"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"3ee928fb47606f031823896953d4d32cf882b379","name":"WordPress <= 3.3.1 - XSS #1","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-3-1-xss","description":"This vulnerability is in the wp-comments-post.php. It allows the attackers to conduct XSS attacks via unspecified vectors.\nUpdate WordPress.","date":"2012-04-21"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"8d936b70553e1a17ee3c950f5e6abb3274d4ca27","name":"WordPress Core &lt;= 3.3.1 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-331-cross-site-scripting","description":"wp-comments-post.php in WordPress before 3.3.2 supports offsite redirects, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via unspecified vectors.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-0782","name":"CVE-2012-0782","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-0782","description":"** DISPUTED ** Multiple cross-site scripting (XSS) vulnerabilities in wp-admin\/setup-config.php in the installation component in WordPress 3.3.1 and earlier allow remote attackers to inject arbitrary web script or HTML via the (1) dbhost, (2) dbname, or (3) uname parameter. NOTE: the vendor disputes the significance of this issue; also, it is unclear whether this specific XSS scenario has security relevance.","date":"2012-01-30"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"3d4ef86df41cefd49fc228c28e2f81a7041e7304","name":"WordPress <= 3.3.1 - Multiple XSS","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-3-1-multiple-xss","description":"Because of these vulnerabilities in wp-admin\/setup-config.php, the attackers can inject arbitrary web script or HTML.\nUpdate WordPress.","date":"2012-01-18"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-0937","name":"CVE-2012-0937","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-0937","description":"** DISPUTED ** wp-admin\/setup-config.php in the installation component in WordPress 3.3.1 and earlier does not limit the number of MySQL queries sent to external MySQL database servers, which allows remote attackers to use WordPress as a proxy for brute-force attacks or denial of service attacks via the dbhost parameter, a different vulnerability than CVE-2011-4898.  NOTE: the vendor disputes the significance of this issue because an incomplete WordPress installation might be present on the network for only a short time.","date":"2012-01-30"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"CVE-2011-4898","name":"CVE-2011-4898","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2011-4898","description":"** DISPUTED ** wp-admin\/setup-config.php in the installation component in WordPress 3.3.1 and earlier generates different error messages for requests lacking a dbname parameter depending on whether the MySQL credentials are valid, which makes it easier for remote attackers to conduct brute-force attacks via a series of requests with different uname and pwd parameters.  NOTE: the vendor disputes the significance of this issue; also, it is unclear whether providing intentionally vague error messages during installation would be reasonable from a usability perspective.","date":"2012-01-30"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-200","name":"Exposure of Sensitive Information to an Unauthorized Actor","description":"The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information."}]}},{"name":"2.5","description":null,"source":[{"id":"200bc5392e618af383af84b9f056aa47e94b7d7d","name":"WordPress <= 3.3.1 - Multiple Vulnerabilities","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-3-1-multiple-vulnerabilities","description":"WordPress version 3.3.1 is  prone to PHP code execution and persistent cross-site scripting vulnerabilities via \"setup-config.php\" page. The attackers can host their own MySQL database server and then successfully complete the WordPress installation without having any valid credentials on the target system. After that they can inject malicious PHP code through the WordPress Themes editor. \r\nAlso, there are multiple cross-site scripting vulnerabilities in \"setup-config.php\" page.  An attacker can supply Javascript within the \"dbname\", \"dbhost\" or \"uname\" parameters. \r\nPassword disclosure vulnerability via \"setup-config.php\" page has been discovered in WordPress 3.3.1. It allows an attacker to omit the \"dbname\" parameter, that lets them continually bruteforce MySQL instance usernames and passwords. It includes any local or remote MySQL instances which are accessible to the\r\ntarget web server.\nUpdate WordPress.","date":"2012-01-25"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2011-4899","name":"CVE-2011-4899","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2011-4899","description":"** DISPUTED ** wp-admin\/setup-config.php in the installation component in WordPress 3.3.1 and earlier does not ensure that the specified MySQL database service is appropriate, which allows remote attackers to configure an arbitrary database via the dbhost and dbname parameters, and subsequently conduct static code injection and cross-site scripting (XSS) attacks via (1) an HTTP request or (2) a MySQL query.  NOTE: the vendor disputes the significance of this issue; however, remote code execution makes the issue important in many realistic environments.","date":"2012-01-30"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"CVE-2012-0287","name":"CVE-2012-0287","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2012-0287","description":"Cross-site scripting (XSS) vulnerability in wp-comments-post.php in WordPress 3.3.x before 3.3.1, when Internet Explorer is used, allows remote attackers to inject arbitrary web script or HTML via the query string in a POST operation that is not properly handled by the \"Duplicate comment detected\" feature.","date":"2012-01-05"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"46da1f53d37ee6c239927f4b4de0934c45bd5fca","name":"WordPress <= 3.3.0 - XSS","link":"https:\/\/patchstack.com\/database\/vulnerability\/lytebox\/wordpress-3-3-0-xss","description":"Because of this vulnerability in wp-comments-post.php, the attackers can inject arbitrary web script or HTML.\nUpdate the plugin.","date":"2012-01-03"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"5f00aa825d34817a55a044120b398214a4461072","name":"WordPress Core &lt;= 3.3 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-33-cross-site-scripting","description":"Cross-site scripting (XSS) vulnerability in wp-comments-post.php in WordPress 3.3.x before 3.3.1, when Internet Explorer is used, allows remote attackers to inject arbitrary web script or HTML via the query string in a POST operation that is not properly handled by the &quot;Duplicate comment detected&quot; feature.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2011-3122","name":"CVE-2011-3122","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2011-3122","description":"Unspecified vulnerability in WordPress 3.1 before 3.1.3 and 3.2 before Beta 2 has unknown impact and attack vectors related to \"Media security.\"","date":"2011-08-10"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"9edbc1a9e360bc19b3179a914b2aa7fc7c71e5d5","name":"WordPress <= 3.1.2 - Unspecified vulnerability #2","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-1-2-unspecified-vulnerability-2","description":"Because of this vulnerability, there are unknown impact and attack vectors related to \"Media security.\" in this WordPress version.","date":"2011-08-10"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"f7c9f79df8721ecdc76a75949455bcfc359140eb","name":"WordPress Core &lt; 3.1.3 - Media Related Security Issue","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-313-media-related-security-issue","description":"Unspecified vulnerability in WordPress 3.1 before 3.1.3 and 3.2 before Beta 2 has unknown impact and attack vectors related to &quot;Media security.&quot;","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2011-3125","name":"CVE-2011-3125","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2011-3125","description":"Unspecified vulnerability in WordPress 3.1 before 3.1.3 and 3.2 before Beta 2 has unknown impact and attack vectors related to \"Various security hardening.\"","date":"2011-08-10"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"aaef5d72722d74ddcfb9d50c87811b39f2217872","name":"WordPress <= 3.1.2 - Unspecified vulnerability #1","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-1-2-unspecified-vulnerability-1","description":"Because of this vulnerability, there are unknown impact and attack vectors related to \"Various security hardening.\" in this WordPress version.\nUpdate WordPress.","date":"2011-08-10"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"e7b1fc9ebf245a16ce708baa6f9b97598d905555","name":"WordPress Core &lt; 3.1.3 - Security Hardening","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-313-security-hardening","description":"Unspecified vulnerability in WordPress 3.1 before 3.1.3 and 3.2 before Beta 2 has unknown impact and attack vectors related to &quot;Various security hardening.&quot;","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2011-3126","name":"CVE-2011-3126","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2011-3126","description":"WordPress 3.1 before 3.1.3 and 3.2 before Beta 2 allows remote attackers to determine usernames of non-authors via canonical redirects.","date":"2011-08-10"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-200","name":"Exposure of Sensitive Information to an Unauthorized Actor","description":"The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information."}]}},{"name":"2.5","description":null,"source":[{"id":"941b168a967691a6c62fefe6848c1efc3e56e3b5","name":"WordPress <= 3.1.2 - Multiple Unspecified Remote vulnerabilities","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-1-2-multiple-unspecified-remote-vulnerabilities","description":"Because of these vulnerabilities, the attackers can determine usernames of non-authors via canonical redirects.\nUpdate WordPress.","date":"2011-08-10"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"7cd6e9711ad93b37dfb963f8d3b52b9cb36e6b85","name":"WordPress Core &lt; 3.1.3 - Username Enumeration","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-313-username-enumeration","description":"WordPress 3.1 before 3.1.3 and 3.2 before Beta 2 allows remote attackers to determine usernames of non-authors via canonical redirects.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2011-3127","name":"CVE-2011-3127","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2011-3127","description":"WordPress 3.1 before 3.1.3 and 3.2 before Beta 2 does not prevent rendering for (1) admin or (2) login pages inside a frame in a third-party HTML document, which makes it easier for remote attackers to conduct clickjacking attacks via a crafted web site.","date":"2011-08-10"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-20","name":"Improper Input Validation","description":"The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly."}]}},{"name":"2.5","description":null,"source":[{"id":"c1d462a6aeabe7f0d65ee4ec55e81ecff2fac79f","name":"WordPress <= 3.1.2 - Clickjacking Attacks","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-1-2-clickjacking-attacks","description":"This WordPress version does not prevent rendering for admin or login pages inside a frame in a third-party HTML document. It allows the attackers to conduct clickjacking attacks via a crafted web site.\nUpdate WordPress.","date":"2011-08-10"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"9d45d117ab388e1680a56f33507a08cbea988b19","name":"WordPress Core &lt; 3.1.3 - Clickjacking","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-313-clickjacking","description":"WordPress 3.1 before 3.1.3 and 3.2 before Beta 2 does not prevent rendering for (1) admin or (2) login pages inside a frame in a third-party HTML document, which makes it easier for remote attackers to conduct clickjacking attacks via a crafted web site.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2011-3128","name":"CVE-2011-3128","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2011-3128","description":"WordPress 3.1 before 3.1.3 and 3.2 before Beta 2 treats unattached attachments as published, which might allow remote attackers to obtain sensitive data via vectors related to wp-includes\/post.php.","date":"2011-08-10"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-200","name":"Exposure of Sensitive Information to an Unauthorized Actor","description":"The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information."}]}},{"name":"2.5","description":null,"source":[{"id":"41ed6c54dcb9e76beaadf8008fb12c71584177a3","name":"WordPress <= 3.1.2 - Multiple vulnerabilities","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-1-2-multiple-vulnerabilities","description":"Because of these vulnerabilities, the attackers can obtain sensitive data via vectors related to wp-includes\/post.php.\nUpdate WordPress.","date":"2011-08-10"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"27496beccc1a8066b9170f1e2f076a9b5a3d3c57","name":"WordPress Core &lt; 3.1.3 - Sensitive Information Disclosure","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-313-sensitive-information-disclosure","description":"WordPress 3.1 before 3.1.3 and 3.2 before Beta 2 treats unattached attachments as published, which might allow remote attackers to obtain sensitive data via vectors related to wp-includes\/post.php.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2011-3129","name":"CVE-2011-3129","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2011-3129","description":"The file upload functionality in WordPress 3.1 before 3.1.3 and 3.2 before Beta 2, when running \"on hosts with dangerous security settings,\" has unknown impact and attack vectors, possibly related to dangerous filenames.","date":"2011-08-10"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"d0ce692ca94073581c7c5050d54e00cc0420b921","name":"WordPress <= 3.1.2 - Arbitrary File Upload vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-1-2-file-upload","description":"The file upload functionality has unknown impact and attack vectors, possibly related to dangerous filenames.\nUpdate WordPress.","date":"2011-08-10"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"d89c62391b98611ab7e16cfda976b2cff8a5cdc5","name":"WordPress Core &lt;= 3.1.2 - Arbitrary File Upload","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-312-arbitrary-file-upload","description":"The file upload functionality in WordPress 3.1 before 3.1.3 and 3.2 before Beta 2, when running &quot;on hosts with dangerous security settings,&quot; has unknown impact and attack vectors, possibly related to dangerous filenames.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2011-3130","name":"CVE-2011-3130","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2011-3130","description":"wp-includes\/taxonomy.php in WordPress 3.1 before 3.1.3 and 3.2 before Beta 2 has unknown impact and attack vectors related to \"Taxonomy query hardening,\" possibly involving SQL injection.","date":"2011-08-10"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-89","name":"Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')","description":"The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}]}},{"name":"2.5","description":null,"source":[{"id":"99615ae593cca4abb7dd4f06a714eb96e180d27d","name":"WordPress <= 3.1.2 - SQL Injection","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-1-2-sql-injection","description":"wp-includes\/taxonomy.php has  unknown impact and attack vectors, that possibly involving SQL injection.\nUpdate WordPress.","date":"2011-08-10"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"9da4c9e34cb7ed93e64c8f5f53fa658e9f83994c","name":"WordPress Core &lt;= 3.1.2 - SQL Injection","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-312-sql-injection","description":"wp-includes\/taxonomy.php in WordPress 3.1 before 3.1.3 and 3.2 before Beta 2 has unknown impact and attack vectors related to &quot;Taxonomy query hardening,&quot; possibly involving SQL injection.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2011-0700","name":"CVE-2011-0700","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2011-0700","description":"Multiple cross-site scripting (XSS) vulnerabilities in WordPress before 3.0.5 allow remote authenticated users to inject arbitrary web script or HTML via vectors related to (1) the Quick\/Bulk Edit title (aka post title or post_title), (2) post_status, (3) comment_status, (4) ping_status, and (5) escaping of tags within the tags meta box.","date":"2011-03-14"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"7691c1e31a0b75130982bda7540d14ae1fb190a4","name":"WordPress <= 3.0.4 - Multiple XSS","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-0-4-multiple-xss","description":"Because of these vulnerabilities, authenticated users can inject arbitrary web script or HTML.","date":"2011-01-31"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"8f9630d9c371ebcde03d5329dbd792715e5782c7","name":"WordPress Core &lt;= 3.0.4 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-304-cross-site-scripting","description":"Multiple cross-site scripting (XSS) vulnerabilities in WordPress before 3.0.5 allow remote authenticated users to inject arbitrary web script or HTML via vectors related to (1) the Quick\/Bulk Edit title (aka post title or post_title), (2) post_status, (3) comment_status, (4) ping_status, and (5) escaping of tags within the tags meta box.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2011-0701","name":"CVE-2011-0701","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2011-0701","description":"wp-admin\/async-upload.php in the media uploader in WordPress before 3.0.5 allows remote authenticated users to read (1) draft posts or (2) private posts via a modified attachment_id parameter.","date":"2011-03-14"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-200","name":"Exposure of Sensitive Information to an Unauthorized Actor","description":"The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information."}]}},{"name":"2.5","description":null,"source":[{"id":"98233d17cff4a8937db4c4f6487544873de512c0","name":"WordPress <= 3.0.4 - Multiple Security Vulnerabilities","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-0-4-multiple-security-vulnerabilities","description":"Because of these vulnerabilities, remote authenticated users can read draft posts or  private posts via a modified \"attachment_id\" parameter.","date":"2011-01-31"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"4a303a67edb83b638f138101f49ebe62dd6d77a6","name":"WordPress Core &lt; 3.0.5 - Improper Authorization to Information Disclosure","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-305-improper-authorization-to-information-disclosure","description":"wp-admin\/async-upload.php in the media uploader in WordPress before 3.0.5 allows remote authenticated users to read (1) draft posts or (2) private posts via a modified attachment_id parameter.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2010-4536","name":"CVE-2010-4536","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2010-4536","description":"Multiple cross-site scripting (XSS) vulnerabilities in KSES, as used in WordPress before 3.0.4, allow remote attackers to inject arbitrary web script or HTML via vectors related to (1) the & (ampersand) character, (2) the case of an attribute name, (3) a padded entity, and (4) an entity that is not in normalized form.","date":"2011-01-03"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"d5cf547b4c9cb542917043ec228d5cc14ff021aa","name":"WordPress <= 3.0.3 - Multiple XSS","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-0-3-multiple-xss","description":"Because of these vulnerabilities, the attackers can inject arbitrary web script or HTML.","date":"2010-12-09"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"c3af1601257a488e171dfd5b695bdc3bef11318b","name":"WordPress Core &lt;= 3.0.3 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-303-cross-site-scripting","description":"Multiple cross-site scripting (XSS) vulnerabilities in KSES, as used in WordPress before 3.0.4, allow remote attackers to inject arbitrary web script or HTML via vectors related to (1) the &amp; (ampersand) character, (2) the case of an attribute name, (3) a padded entity, and (4) an entity that is not in normalized form.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2010-4257","name":"CVE-2010-4257","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2010-4257","description":"SQL injection vulnerability in the do_trackbacks function in wp-includes\/comment.php in WordPress before 3.0.2 allows remote authenticated users to execute arbitrary SQL commands via the Send Trackbacks field.","date":"2010-12-06"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-89","name":"Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')","description":"The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}]}},{"name":"2.5","description":null,"source":[{"id":"683188dfe823358183e7e73796a7aa7b8c7a033e","name":"WordPress <= 3.0.1 - SQL Injection","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-0-1-sql-injection","description":"Because of this vulnerability,  authenticated users can execute arbitrary SQL commands via the Send Trackbacks field.","date":"2010-11-16"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"f18431a666ef3702061bb5bcb0b932e96b804e5d","name":"WordPress Core &lt;= 3.0.1 - SQL Injection","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-301-sql-injection","description":"SQL injection vulnerability in the do_trackbacks function in wp-includes\/comment.php in WordPress before 3.0.2 allows remote authenticated users to execute arbitrary SQL commands via the Send Trackbacks field.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2010-0682","name":"CVE-2010-0682","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2010-0682","description":"WordPress 2.9 before 2.9.2 allows remote authenticated users to read trash posts from other authors via a direct request with a modified p parameter.","date":"2010-02-23"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"e9cc655a58823e7b3226a972c07e926dd50f54f7","name":"WordPress 2.9 - Failure to Restrict URL Access","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-9-failure-to-restrict-url-access","description":"A new feature, called \"Trash\", was implemented so that users were able to retrieve posts that they may have deleted by accident. Any posts that are placed within the trash are  viewable by authenticated  users, no matter what privileges they have.","date":"2010-02-13"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"74f7827de4b4155c7ba34148d889c1d81e865ea9","name":"WordPress Core &lt; 2.9.2 - Authorization Bypass","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-292-authorization-bypass","description":"WordPress 2.9 before 2.9.2 allows remote authenticated users to read trash posts from other authors via a direct request with a modified p parameter.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2009-3890","name":"CVE-2009-3890","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2009-3890","description":"Unrestricted file upload vulnerability in the wp_check_filetype function in wp-includes\/functions.php in WordPress before 2.8.6, when a certain configuration of the mod_mime module in the Apache HTTP Server is enabled, allows remote authenticated users to execute arbitrary code by posting an attachment with a multiple-extension filename, and then accessing this attachment via a direct request to a wp-content\/uploads\/ pathname, as demonstrated by a .php.jpg filename.","date":"2009-11-17"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-94","name":"Improper Control of Generation of Code ('Code Injection')","description":"The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment."}]}},{"name":"2.5","description":null,"source":[{"id":"6f28fc256520df2ab6324ff0cac4b122abf741ab","name":"WordPress <= 2.8.5 - Unrestricted File Upload Arbitrary PHP Code Execution","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-8-5-unrestricted-file-upload-arbitrary-php-code-execution","description":"An  unrestricted file upload arbitrary PHP code execution vulnerability was found in WordPress 2.8.5 and lower versions.","date":"2009-11-11"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"529aa25f5b2e12add2117bcf298b3bf90d75feab","name":"WordPress Core &lt;= 2.8.5 - Arbitrary File Upload","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-285-arbitrary-file-upload","description":"Unrestricted file upload vulnerability in the wp_check_filetype function in wp-includes\/functions.php in WordPress before 2.8.6, when a certain configuration of the mod_mime module in the Apache HTTP Server is enabled, allows remote authenticated users to execute arbitrary code by posting an attachment with a multiple-extension filename, and then accessing this attachment via a direct request to a wp-content\/uploads\/ pathname, as demonstrated by a .php.jpg filename.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2009-3891","name":"CVE-2009-3891","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2009-3891","description":"Cross-site scripting (XSS) vulnerability in wp-admin\/press-this.php in WordPress before 2.8.6 allows remote authenticated users to inject arbitrary web script or HTML via the s parameter (aka the selection variable).","date":"2009-11-17"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"2b2067c6bcb197af93fb6173f965994c3108d5fd","name":"WordPress <= 2.8.5 - XSS","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-8-5-xss","description":"Because of this vulnerability in wp-admin\/press-this.php, authenticated users can inject arbitrary web script or HTML via the \"s\" parameter.","date":"2009-11-05"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"0c248254f5877ee63998b57e6fcbd11f20cf6c00","name":"WordPress Core &lt;= 2.8.5 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-285-cross-site-scripting","description":"Cross-site scripting (XSS) vulnerability in wp-admin\/press-this.php in WordPress before 2.8.6 allows remote authenticated users to inject arbitrary web script or HTML via the s parameter (aka the selection variable).","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2009-3622","name":"CVE-2009-3622","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2009-3622","description":"Algorithmic complexity vulnerability in wp-trackback.php in WordPress before 2.8.5 allows remote attackers to cause a denial of service (CPU consumption and server hang) via a long title parameter in conjunction with a charset parameter composed of many comma-separated \"UTF-8\" substrings, related to the mb_convert_encoding function in PHP.","date":"2009-10-23"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"a16ce0123b0b4dbb2a5c079e2d1b33cb5e07ad40","name":"WordPress <= 2.8.4 - Algorithmic complexity","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-8-4-algorithmic-complexity","description":"Because of this vulnerability in wp-trackback.php, the attackers can cause a denial of service attacks.","date":"2009-10-09"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"2bd2236ba3d0389742bfc9379c742518ddcc3e3d","name":"WordPress Core &lt;= 2.8.4 - Denial of Service","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-284-denial-of-service","description":"Algorithmic complexity vulnerability in wp-trackback.php in WordPress before 2.8.5 allows remote attackers to cause a denial of service (CPU consumption and server hang) via a long title parameter in conjunction with a charset parameter composed of many comma-separated &quot;UTF-8&quot; substrings, related to the mb_convert_encoding function in PHP.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2009-2854","name":"CVE-2009-2854","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2009-2854","description":"Wordpress before 2.8.3 does not check capabilities for certain actions, which allows remote attackers to make unauthorized edits or additions via a direct request to (1) edit-comments.php, (2) edit-pages.php, (3) edit.php, (4) edit-category-form.php, (5) edit-link-category-form.php, (6) edit-tag-form.php, (7) export.php, (8) import.php, or (9) link-add.php in wp-admin\/.","date":"2009-08-18"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"e1f0bd0706daf0d7c2434275f7761d6fdb71093e","name":"WordPress <= 2.8.2 - Multiple Vulnerabilities #1","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-8-2-multiple-vulnerabilities-1","description":"Because of these vulnerabilities, the attackers can make unauthorized edits or additions via a direct request to edit-category-form.php,  edit-pages.php,  edit-comments.php, edit-link-category-form.php,  or  edit.php.","date":"2009-08-18"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"e6344ac12f06e7cb8a12436d0a78bea91693ca90","name":"WordPress Core &lt; 2.8.3 - Missing Authorization","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-283-missing-authorization","description":"Wordpress before 2.8.3 does not check capabilities for certain actions, which allows remote attackers to make unauthorized edits or additions via a direct request to (1) edit-comments.php, (2) edit-pages.php, (3) edit.php, (4) edit-category-form.php, (5) edit-link-category-form.php, (6) edit-tag-form.php, (7) export.php, (8) import.php, or (9) link-add.php in wp-admin\/.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2009-2851","name":"CVE-2009-2851","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2009-2851","description":"Cross-site scripting (XSS) vulnerability in the administrator interface in WordPress before 2.8.2 allows remote attackers to inject arbitrary web script or HTML via a comment author URL.","date":"2009-08-18"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"36b410385fce569482998876a4cdb9e5e56e27ff","name":"WordPress 2.8.1 - Remote Cross-Site Scripting Vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-8-1-remote-cross-site-scripting-exploit","description":"This version of WordPress is prone to a cross-site scripting vulnerability.","date":"2009-07-24"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"7842bd6951222738082579f9d581ace90f3ebadc","name":"WordPress Core &lt;= 2.8.1 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-281-cross-site-scripting","description":"Cross-site scripting (XSS) vulnerability in the administrator interface in WordPress before 2.8.2 allows remote attackers to inject arbitrary web script or HTML via a comment author URL.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2009-2853","name":"CVE-2009-2853","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2009-2853","description":"Wordpress before 2.8.3 allows remote attackers to gain privileges via a direct request to (1) admin-footer.php, (2) edit-category-form.php, (3) edit-form-advanced.php, (4) edit-form-comment.php, (5) edit-link-category-form.php, (6) edit-link-form.php, (7) edit-page-form.php, and (8) edit-tag-form.php in wp-admin\/.","date":"2009-08-18"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"789fcdeac436fd3bc9ce04146aa6a052c6ee9488","name":"WordPress <= 2.8.2 - Multiple Vulnerabilities #2","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-8-2-multiple-vulnerabilities-2","description":"Because of these vulnerabilities, the attackers can gain privileges via a direct request to edit-link-category-form.php, admin-footer.php, edit-page-form.php,  edit-category-form.php or edit-form-comment.php.","date":"2009-08-18"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"90fadfa69b21b1d6f12eb4b1c70c99ebb3961b78","name":"WordPress Core &lt; 2.8.3 - Authorization Bypass","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-283-authorization-bypass","description":"Wordpress before 2.8.3 allows remote attackers to gain privileges via a direct request to (1) admin-footer.php, (2) edit-category-form.php, (3) edit-form-advanced.php, (4) edit-form-comment.php, (5) edit-link-category-form.php, (6) edit-link-form.php, (7) edit-page-form.php, and (8) edit-tag-form.php in wp-admin\/.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2009-2762","name":"CVE-2009-2762","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2009-2762","description":"wp-login.php in WordPress 2.8.3 and earlier allows remote attackers to force a password reset for the first user in the database, possibly the administrator, via a key[] array variable in a resetpass (aka rp) action, which bypasses a check that assumes that $key is not an array.","date":"2009-08-13"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"28aeb454c2600bbeecb84c245023f40464856e7f","name":"WordPress <= 2.8.2 - BYPASS","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-8-2-bypass","description":"Because of this admin password reset security Bypass vulnerability, the attackers can force a password reset for the first user in the database, possibly the administrator.","date":"2009-08-13"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"89fd796393aaaa709e6473d486352f4a16e3d878","name":"WordPress Core &lt; 2.8.4 - Forced Password Reset","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-284-forced-password-reset","description":"wp-login.php in WordPress 2.8.3 and earlier allows remote attackers to force a password reset for the first user in the database, possibly the administrator, via a key[] array variable in a resetpass (aka rp) action, which bypasses a check that assumes that $key is not an array.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2009-2334","name":"CVE-2009-2334","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2009-2334","description":"wp-admin\/admin.php in WordPress and WordPress MU before 2.8.1 does not require administrative authentication to access the configuration of a plugin, which allows remote attackers to specify a configuration file in the page parameter to obtain sensitive information or modify this file, as demonstrated by the (1) collapsing-archives\/options.txt, (2) akismet\/readme.txt, (3) related-ways-to-take-action\/options.php, (4) wp-security-scan\/securityscan.php, and (5) wp-ids\/ids-admin.php files. NOTE: this can be leveraged for cross-site scripting (XSS) and denial of service.","date":"2009-07-10"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-287","name":"Improper Authentication","description":"When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct."}]}},{"name":"2.5","description":null,"source":[{"id":"d18eb569cf444e2f04a3ade4a0690cd1842d7642","name":"WordPress - Privileges Unchecked in admin.php and Multiple Information","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-privileges-unchecked-in-admin-php-and-multiple-information","description":"This WordPress vulnerability was found in the way that WordPress handles some URL\r\nrequests. It results the content of plugins configuration pages in some plugins modifying plugin options, unprivileged users viewing and injecting JavaScript code. \r\nThe code is abitrary and it may be run by a malicious attacker, if the administrator of the blog runs injected JavasScript code that edits blog's PHP code. Most of all the blogs that are powered by WordPress and hosted outside \"WordPress.com\", let any person to create unprivileged users that are called subscribers. \r\nAlso, there disclosure of important username's information  were found in WordPress.","date":"2009-07-10"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"eef796c3811804348eef29a2c8ace47d92243398","name":"WordPress Core &lt;= 2.8 - Sensitive Information Disclosure","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/detail\/wordpress-core-28-sensitive-information-disclosure","description":"wp-admin\/admin.php in WordPress and WordPress MU before 2.8.1 does not require administrative authentication to access the configuration of a plugin, which allows remote attackers to specify a configuration file in the page parameter to obtain sensitive information or modify this file, as demonstrated by the (1) collapsing-archives\/options.txt, (2) akismet\/readme.txt, (3) related-ways-to-take-action\/options.php, (4) wp-security-scan\/securityscan.php, and (5) wp-ids\/ids-admin.php files. NOTE: this can be leveraged for cross-site scripting (XSS) and denial of service.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2009-2431","name":"CVE-2009-2431","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2009-2431","description":"WordPress 2.7.1 places the username of a post's author in an HTML comment, which allows remote attackers to obtain sensitive information by reading the HTML source.","date":"2009-07-10"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-20","name":"Improper Input Validation","description":"The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly."}]}},{"name":"2.5","description":null,"source":[{"id":"ae0f5c10e3f77e526a92b69313437481f52b434a","name":"WordPress <= 2.7.1 - Information Disclosure","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-7-1-information-disclosure","description":"Because of this vulnerability, the attackers can obtain sensitive information by reading the HTML source.","date":"2009-07-10"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"7c9d6877d4aa6de30acba43844fd60dbbad9d033","name":"WordPress Core &lt; 2.8 - Sensitive Information Disclosure","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-28-sensitive-information-disclosure-2","description":"WordPress 2.7.1 places the username of a post&#039;s author in an HTML comment, which allows remote attackers to obtain sensitive information by reading the HTML source.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2009-2336","name":"CVE-2009-2336","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2009-2336","description":"The forgotten mail interface in WordPress and WordPress MU before 2.8.1 exhibits different behavior for a password request depending on whether the user account exists, which allows remote attackers to enumerate valid usernames.  NOTE: the vendor reportedly disputes the significance of this issue, indicating that the behavior exists for \"user convenience.\"","date":"2009-07-10"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"c05e67e1bb9afc23dff865491a3263b909960540","name":"WordPress <= 2.8.0 - Multiple Existing\/Non-Existing Username Enumeration Weaknesses","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-8-0-multiple-existing-non-existing-username-enumeration-weaknesses","description":"Because of this vulnerability, the attackers can enumerate valid usernames.","date":"2009-07-05"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"2cacbf389b9fd45ff89df41fa77307602b8c476e","name":"WordPress Core &amp; WordPress MU &lt; 2.8.1 - Username Enumeration","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/detail\/wordpress-core-wordpress-mu-281-username-enumeration","description":"The forgotten mail interface in WordPress and WordPress MU before 2.8.1 exhibits different behavior for a password request depending on whether the user account exists, which allows remote attackers to enumerate valid usernames.  NOTE: the vendor reportedly disputes the significance of this issue, indicating that the behavior exists for &quot;user convenience.&quot;","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2009-2432","name":"CVE-2009-2432","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2009-2432","description":"WordPress and WordPress MU before 2.8.1 allow remote attackers to obtain sensitive information via a direct request to wp-settings.php, which reveals the installation path in an error message.","date":"2009-07-10"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"a0624a1763ff30d27b5309fbb7702ce9d795c3a4","name":"WordPress <= 2.8.0 - Multiple vulnerabilities","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-8-0-multiple-vulnerabilities","description":"Because of these vulnerabilities, the attackers can obtain sensitive information via a direct request to wp-settings.php, that reveals the installation path in an error message.","date":"2009-07-10"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"45b5c06df4adb1e4a03ba55424fe6cb2b029fdd0","name":"WordPress Core &amp; WordPress MU &lt; 2.8.1 - Full Path Disclosure","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/detail\/wordpress-core-wordpress-mu-281-full-path-disclosure","description":"WordPress and WordPress MU before 2.8.1 allow remote attackers to obtain sensitive information via a direct request to wp-settings.php, which reveals the installation path in an error message.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2009-2335","name":"CVE-2009-2335","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2009-2335","description":"WordPress and WordPress MU before 2.8.1 exhibit different behavior for a failed login attempt depending on whether the user account exists, which allows remote attackers to enumerate valid usernames.  NOTE: the vendor reportedly disputes the significance of this issue, indicating that the behavior exists for \"user convenience.\"","date":"2009-07-10"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"f9e0a61762383f93343216b93afab0934abe3a67","name":"WordPress Core &amp; WordPress MU &lt; 2.8.1 - Username Enumeration","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/detail\/wordpress-core-wordpress-mu-281-username-enumeration-2","description":"WordPress and WordPress MU before 2.8.1 exhibit different behavior for a failed login attempt depending on whether the user account exists, which allows remote attackers to enumerate valid usernames.  NOTE: the vendor reportedly disputes the significance of this issue, indicating that the behavior exists for &quot;user convenience.&quot;","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2008-6762","name":"CVE-2008-6762","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2008-6762","description":"Open redirect vulnerability in wp-admin\/upgrade.php in WordPress, probably 2.6.x, allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via a URL in the backto parameter.","date":"2009-04-28"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-59","name":"Improper Link Resolution Before File Access ('Link Following')","description":"The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource."}]}},{"name":"2.5","description":null,"source":[{"id":"9271ae9035822e31c41a6f09231944740bdf0f13","name":"WordPress <= 2.6.9 - Open Redirection","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-6-9-open-redirection","description":"Because of this vulnerability in wp-admin\/upgrade.php, the attackers can redirect users to arbitrary web sites and conduct phishing attacks via a URL in the \"backto\" parameter.","date":"2009-04-28"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"48663ad934d492ded353c8e50986585a50f07cd1","name":"WordPress Core &lt; 2.8.1 - Open Redirect","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-281-open-redirect","description":"Open redirect vulnerability in wp-admin\/upgrade.php in WordPress, probably 2.6.x, allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via a URL in the backto parameter.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2008-6767","name":"CVE-2008-6767","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2008-6767","description":"wp-admin\/upgrade.php in WordPress, probably 2.6.x, allows remote attackers to upgrade the application, and possibly cause a denial of service (application outage), via a direct request.","date":"2009-04-28"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"5ebc002583b759bc5449f7247d2af601aa0389d4","name":"WordPress <= 2.6.9 - Denial Of Service Attacks","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-6-9-denial-of-service-attacks","description":"Because of this vulnerability in the wp-admin\/upgrade.php, the attackers can upgrade the application, and possibly cause a denial of service attacks.","date":"2009-04-28"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"b4d34c5a40e50f9db7ecd158c1f085973827cccd","name":"WordPress Core &lt; 2.7 - Denial of Service","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-27-denial-of-service","description":"wp-admin\/upgrade.php in WordPress, probably 2.6.x, allows remote attackers to upgrade the application, and possibly cause a denial of service (application outage), via a direct request.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2009-1030","name":"CVE-2009-1030","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2009-1030","description":"Cross-site scripting (XSS) vulnerability in the choose_primary_blog function in wp-includes\/wpmu-functions.php in WordPress MU (WPMU) before 2.7 allows remote attackers to inject arbitrary web script or HTML via the HTTP Host header.","date":"2009-03-19"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"e403e6ab363298a62dbe1c838a76d1b30a217c6d","name":"WordPress MU <= 2.7 - 'HOST' HTTP Header XSS Vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wpmu\/wordpress-mu-2-7-host-http-header-xss-vulnerability","description":"WordPress MU prior to version 2.7 fails to sanitize the Host header correctly in choose_primary_blog function and can be hacked. Sites running in based virtual hosting setup are not affected while they are not the default virtual host.","date":"2009-03-10"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"7574326aeb4be6cffe8b1dab5905a51864104146","name":"WordPress MU &lt; 2.7 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-mu-27-cross-site-scripting","description":"Cross-site scripting (XSS) vulnerability in the choose_primary_blog function in wp-includes\/wpmu-functions.php in WordPress MU (WPMU) before 2.7 allows remote attackers to inject arbitrary web script or HTML via the HTTP Host header.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2008-5278","name":"CVE-2008-5278","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2008-5278","description":"Cross-site scripting (XSS) vulnerability in the self_link function in in the RSS Feed Generator (wp-includes\/feed.php) for WordPress before 2.6.5 allows remote attackers to inject arbitrary web script or HTML via the Host header (HTTP_HOST variable).","date":"2008-11-28"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"f7c63e35cfa6d8fcdbe014e00eda314b4f3817f7","name":"WordPress RSS Feed Generator Plugin <= 2.6.4 - XSS","link":"https:\/\/patchstack.com\/database\/vulnerability\/rss-feed-generator\/wordpress-rss-feed-generator-plugin-2-6-4-xss","description":"Because of this vulnerability, the attackers can inject arbitrary web script or HTML via the Host header.","date":"2008-11-28"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"0865a43a1c1c3f7f6a8683f866a8b4bc20a69023","name":"WordPress Core &lt; 2.6.5 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-265-cross-site-scripting","description":"Cross-site scripting (XSS) vulnerability in the self_link function in in the RSS Feed Generator (wp-includes\/feed.php) for WordPress before 2.6.5 allows remote attackers to inject arbitrary web script or HTML via the Host header (HTTP_HOST variable).","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2008-5113","name":"CVE-2008-5113","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2008-5113","description":"WordPress 2.6.3 relies on the REQUEST superglobal array in certain dangerous situations, which makes it easier for remote attackers to conduct delayed and persistent cross-site request forgery (CSRF) attacks via crafted cookies, as demonstrated by attacks that (1) delete user accounts or (2) cause a denial of service (loss of application access).  NOTE: this issue relies on the presence of an independent vulnerability that allows cookie injection.","date":"2008-11-17"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-352","name":"Cross-Site Request Forgery (CSRF)","description":"The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request."}]}},{"name":"2.5","description":null,"source":[{"id":"e52993d56c2f73d02c12cac81bc6926e51a85136","name":"WordPress <= 2.6.3 - Cross Site Request Forgery","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-6-3-cross-site-request-forgery","description":"Because of this vulnerability, the attackers can conduct delayed and persistent cross-site request forgery attacks via crafted cookies.","date":"2008-11-17"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2008-4671","name":"CVE-2008-4671","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2008-4671","description":"Cross-site scripting (XSS) vulnerability in wp-admin\/wp-blogs.php in Wordpress MU (WPMU) before 2.6 allows remote attackers to inject arbitrary web script or HTML via the (1) s and (2) ip_address parameters.","date":"2008-10-22"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"7db9e0bd0e57f40383dbaeefeb9eb3a948f51581","name":"WordPress MU <= 2.5 - XSS","link":"https:\/\/patchstack.com\/database\/vulnerability\/wpmu\/wordpress-mu-2-5-xss","description":"Because of this vulnerability in wp-admin\/wp-blogs.php, the attackers tcan inject arbitrary web script or HTML .","date":"2008-10-21"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"bdc921f5f2e0fa45081ca12bf1411198addf0ccb","name":"WordPress MU &lt; 2.6 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-mu-26-cross-site-scripting","description":"Cross-site scripting (XSS) vulnerability in wp-admin\/wp-blogs.php in Wordpress MU (WPMU) before 2.6 allows remote attackers to inject arbitrary web script or HTML via the (1) s and (2) ip_address parameters.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2008-4106","name":"CVE-2008-4106","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2008-4106","description":"WordPress before 2.6.2 does not properly handle MySQL warnings about insertion of username strings that exceed the maximum column width of the user_login column, and does not properly handle space characters when comparing usernames, which allows remote attackers to change an arbitrary user's password to a random value by registering a similar username and then requesting a password reset, related to a \"SQL column truncation vulnerability.\" NOTE: the attacker can discover the random password by also exploiting CVE-2008-4107.","date":"2008-09-18"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-20","name":"Improper Input Validation","description":"The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly."}]}},{"name":"2.5","description":null,"source":[{"id":"276c96b312bb5ae8a82d80f139bfc90a6d5eb5a3","name":"WordPress <= 2.6.1 - SQL Truncation Vulnerability #2","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-6-1-sql-truncation-2","description":"The attackers can change an arbitrary user's password to a random value by registering a similar username and then requesting a password reset, related to a \"SQL column truncation vulnerability.\", because this WordPress does not properly handle MySQL warnings about insertion of username strings that exceed the maximum column width of the user_login column, and does not properly handle space characters when comparing usernames.","date":"2008-09-15"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"747226e228d2339461c23de1c3c877e42733fd62","name":"WordPress Core &lt; 2.6.2 - Arbitrary User Password Reset","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-262-arbitrary-user-password-reset","description":"WordPress before 2.6.2 does not properly handle MySQL warnings about insertion of username strings that exceed the maximum column width of the user_login column, and does not properly handle space characters when comparing usernames, which allows remote attackers to change an arbitrary user&#039;s password to a random value by registering a similar username and then requesting a password reset, related to a &quot;SQL column truncation vulnerability.&quot; NOTE: the attacker can discover the random password by also exploiting CVE-2008-4107.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2008-4107","name":"CVE-2008-4107","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2008-4107","description":"The (1) rand and (2) mt_rand functions in PHP 5.2.6 do not produce cryptographically strong random numbers, which allows attackers to leverage exposures in products that rely on these functions for security-relevant functionality, as demonstrated by the password-reset functionality in Joomla! 1.5.x and WordPress before 2.6.2, a different vulnerability than CVE-2008-2107, CVE-2008-2108, and CVE-2008-4102.","date":"2008-09-18"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"25449ee89a80587021f659e4b842a73ed06e2fc5","name":"WordPress <= 2.6.1 - SQL Truncation Vulnerability #1","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-6-1-sql-truncation-vulnerability","description":"Because of this vulnerability, the attackers can leverage exposures in products that rely on these functions for security-relevant functionality.","date":"2008-09-15"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"f258f3bfecd365b827b703c54a73fe084158260e","name":"WordPress Core &lt; 2.6.2 - Cryptographic Weakness","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-262-cryptographic-weakness","description":"The (1) rand and (2) mt_rand functions in PHP 5.2.6 do not produce cryptographically strong random numbers, which allows attackers to leverage exposures in products that rely on these functions for security-relevant functionality, as demonstrated by the password-reset functionality in Joomla! 1.5.x and WordPress before 2.6.2, a different vulnerability than CVE-2008-2107, CVE-2008-2108, and CVE-2008-4102.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2008-3747","name":"CVE-2008-3747","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2008-3747","description":"The (1) get_edit_post_link and (2) get_edit_comment_link functions in wp-includes\/link-template.php in WordPress before 2.6.1 do not force SSL communication in the intended situations, which might allow remote attackers to gain administrative access by sniffing the network for a cookie.","date":"2008-08-27"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"}}},{"name":"2.5","description":null,"source":[{"id":"0af36852a878076bf72193577ce62776a5eea118","name":"WordPress <= 2.6.0 - Multiple vulnerabilities","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-6-0-multiple-vulnerabilities","description":"Because of these vulnerabilities, the attackers can gain administrative access by sniffing the network for a cookie.","date":"2008-08-20"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"1fe97a24170d6fb49a586126e75da8f7e0d8d5b7","name":"WordPress Core &lt; 2.6.1 - Cryptographic Weakness","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-261-cryptographic-weakness","description":"The (1) get_edit_post_link and (2) get_edit_comment_link functions in wp-includes\/link-template.php in WordPress before 2.6.1 do not force SSL communication in the intended situations, which might allow remote attackers to gain administrative access by sniffing the network for a cookie.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2008-3233","name":"CVE-2008-3233","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2008-3233","description":"Cross-site scripting (XSS) vulnerability in WordPress before 2.6, SVN development versions only, allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.","date":"2008-07-18"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"2.5","description":null,"source":[{"id":"5d65dfb5e6b8977ceaace0f45b0f7ef17d69333e","name":"WordPress  <= 2.5 - XSS","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-5-xss","description":"Because of this vulnerability, the attackers can inject arbitrary web script or HTML via unspecified vectors.","date":"2008-07-18"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"382ffd7ce8fc547c51bea6d205207b93d588f6c2","name":"WordPress Core &lt; 2.6 - Cross-Site Scripting","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-26-cross-site-scripting","description":"Cross-site scripting (XSS) vulnerability in WordPress before 2.6, SVN development versions only, allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2008-2510","name":"CVE-2008-2510","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2008-2510","description":"SQL injection vulnerability in wp-uploadfile.php in the Upload File plugin for WordPress allows remote attackers to execute arbitrary SQL commands via the f_id parameter.","date":"2008-05-29"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-89","name":"Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')","description":"The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component."}]}},{"name":"2.5","description":null,"source":[{"id":"d542d2c136b6fda9698aa65bb48e447f5ac256fb","name":"WordPress File Upload  Plugin - SQL Injection","link":"https:\/\/patchstack.com\/database\/vulnerability\/file-upload\/wordpress-file-upload-plugin-sql-injection","description":"Because of this vulnerability in wp-uploadfile.php, the attackers can execute arbitrary SQL commands via the \"f_id\" parameter.","date":"2008-05-29"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2008-2392","name":"CVE-2008-2392","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2008-2392","description":"Unrestricted file upload vulnerability in WordPress 2.5.1 and earlier might allow remote authenticated administrators to upload and execute arbitrary PHP files via the Upload section in the Write Tabs area of the dashboard.","date":"2008-05-21"}],"impact":{"cvss":{"version":"0.0","vector":"","av":"","ac":"","pr":"","ui":"","s":"","c":"","i":"","a":"","score":"0.0","severity":"","exploitable":"0.0","impact":"0.0"},"cwe":[{"cwe":"CWE-20","name":"Improper Input Validation","description":"The product receives input or data, but it does\n        not validate or incorrectly validates that the input has the\n        properties that are required to process the data safely and\n        correctly."}]}},{"name":"2.5","description":null,"source":[{"id":"b381289206d7c890bd1ea0c54face753b29af016","name":"WordPress <= 2.5.1 - Unrestricted file upload","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-5-1-unrestricted-file-upload","description":"Because of this vulnerability, the authenticated administrators  can upload and execute arbitrary PHP files via the Upload section.","date":"2008-05-21"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"1b4a06316a0099d55d34f66a0c8b55ee51f22117","name":"WordPress Core &lt;= 2.5.1 - Arbitrary File Upload","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-251-arbitrary-file-upload","description":"Unrestricted file upload vulnerability in WordPress 2.5.1 and earlier might allow remote authenticated administrators to upload and execute arbitrary PHP files via the Upload section in the Write Tabs area of the dashboard.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2011-1762","name":"CVE-2011-1762","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2011-1762","description":"A flaw exists in Wordpress related to the 'wp-admin\/press-this.php 'script improperly checking user permissions when publishing posts. This may allow a user with 'Contributor-level' privileges to post as if they had 'publish_posts' permission.","date":"2022-04-18"}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:H\/A:N","av":"n","ac":"l","pr":"l","ui":"n","s":"u","c":"n","i":"h","a":"n","score":"6.5","severity":"m","exploitable":"2.8","impact":"3.6"},"cwe":[{"cwe":"CWE-276","name":"Incorrect Default Permissions","description":"During installation, installed file permissions are set to allow anyone to modify those files."}]}},{"name":"2.5","description":null,"source":[{"id":"c428df70ed9833b99c12b146819439909da64bdb","name":"WordPress Core &lt; 3.1.2 - Incorrect Authorization for Contributor-level users","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-312-incorrect-authorization-for-contributor-level-users","description":"A flaw exists in Wordpress related to the &#039;wp-admin\/press-this.php &#039;script improperly checking user permissions when publishing posts. This may allow a user with &#039;Contributor-level&#039; privileges to post as if they had &#039;publish_posts&#039; permission.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"JVNDB-2011-000109","name":"WordPress vulnerable to arbitrary PHP code execution","link":"http:\/\/jvndb.jvn.jp\/jvndb\/JVNDB-2011-000109","description":"WordPress contains a vulnerability where arbitrary PHP code may be executed.  WordPress provided by WordPress.Org is a weblog system. WordPress contains a vulnerability where arbitrary PHP code may be executed.  Takeshi Terada of Mitsui Bussan Secure Directions, Inc. reported this vulnerability to IPA. JPCERT\/CC coordinated with the developer under Information Security Early Warning Partnership.\n\nSolution: [Update the software] Update to the latest version according to the information provided by the developer.","date":"2011-12-26"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"JVNDB-2011-000110","name":"WordPress Japanese vulnerable to cross-site scripting","link":"http:\/\/jvndb.jvn.jp\/jvndb\/JVNDB-2011-000110","description":"WordPress Japanese contains a cross-site scripting vulnerability.  WordPress provided by WordPress.Org is a weblog system. WordPress Japanese contains a cross-site scripting vulnerability.  Katsuhiro Kawahara, Kozo Fukui of Kobe Digital Labo.,Inc. and Yuya Yoshida of Mitsui Bussan Secure Directions, Inc. reported this vulnerability to IPA. JPCERT\/CC coordinated with the developer under Information Security Early Warning Partnership.\n\nSolution: [Update the software] Update to the latest version according to the information provided by the developer.","date":"2011-12-26"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"e15d52a7691c6dc93764b0a7b4c9e6627888a3f3","name":"WordPress 2.0 - 2.7.1  - Module Configuration Security Bypass Vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-0-2-7-1-module-configuration-security-bypass-vulnerability","description":"An attacker can use this issue via a browser.","date":"2009-11-10"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"75ee21590a1fd777469131f91c3fe6a3a14d650d","name":"WordPress <= 2.9 - DoS (0day)","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-2-9-dos-0day","description":"The vulnerability of  WordPress DoS (0day) causes these issues: the service is overloaded by requests until real traffic ends up getting blocked or it chrashes (becomes unavailable)  and there are 100% CPU and RAM Usage.","date":"2009-12-31"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"b010833d79bc830cc940e704fea22261819be565","name":"WordPress 3.0.3 - Stored XSS (IE6\/7 NS8.1)","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-0-3-stored-xss-ie6-7-ns8-1","description":"This WordPress version  is prone to a stored cross-site scripting vulnerability.  It works by \r\nusing CSS styles that affects users surfing with the malicious posts using IE6, IE7, NS 8.1","date":"2010-12-29"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"4d9141fe884f4b578093e704f5c1df8437fbde4a","name":"WordPress 3.1.3 - SQL Injection Vulnerabilities","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-1-3-sql-injection-vulnerabilities","description":"Because of insufficient input validation in certain functions of WordPress it is possible to inject arbitrary SQL commands with the \"Editor\" role. In this way an attacker gets access to all records stored in database.","date":"2011-07-01"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"1978c6439d4ffbda7fe77056944c54b474d60ff0","name":"WordPress <= 5.9.1 - Stored Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-5-9-1-stored-cross-site-scripting-xss-vulnerability","description":"Stored Cross-Site Scripting (XSS) vulnerability discovered by Ben Bidner in WordPress (versions <= 5.9.1).","date":"2022-03-11"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"2bbe5c72a57fb5f3e94693e6244769337422525b","name":"WordPress core <= 5.8.1 - Expired DST Root CA X3 Certificate issue","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-5-8-1-expired-dst-root-ca-x3-certificate-issue","description":"Expired DST Root CA X3 Certificate issue discovered by Bradley Taylor in WordPress core (versions <= 5.8.1).","date":"2021-11-10"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"490605922c1772788f6b0f30994c594b6d493e23","name":"WordPress core <= 5.8 - Command injection vulnerability in the Lodash library","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-5-8-command-injection-vulnerability-in-the-lodash-library","description":"Command injection vulnerability in the Lodash library in WordPress core (versions <= 5.8).\r\n\r\nVersion update list: 5.8 updated to 5.8.1, 5.7.2 updated to 5.7.3, 5.7.1 updated to 5.7.3, 5.7 updated to 5.7.3, 5.6.4 updated to 5.6.5, 5.6.3 updated to 5.6.5, 5.6.2 updated to 5.6.5, 5.6.1 updated to 5.6.5, 5.6 updated to 5.6.5, 5.5.5 updated to 5.5.6, 5.5.4 updated to 5.5.6, 5.5.3 updated to 5.5.6, 5.5.2 updated to 5.5.6, 5.5.1 updated to 5.5.6, 5.5 updated to 5.5.6, 5.4.6 updated to 5.4.7, 5.4.5 updated to 5.4.7, 5.4.4 updated to 5.4.7, 5.4.3 updated to 5.4.7, 5.4.2 updated to 5.4.7, 5.4.1 updated to 5.4.7, 5.4 updated to 5.4.7","date":"2021-09-09"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"0fa3ffc1bfd20c1f310b5592a17d14135f7e8fd4","name":"WordPress <= 5.7.1 - Object injection in PHPMailer vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-5-7-object-injection-in-phpmailer-vulnerability-cve-2020-36326","description":"Object injection in PHPMailer vulnerability discovered in WordPress (one security issue affecting WordPress versions between 3.7 and 5.7).","date":"2021-05-13"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2020-36326","name":"CVE-2020-36326","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2020-36326","description":"PHPMailer 6.1.8 through 6.4.0 allows object injection through Phar Deserialization via addAttachment with a UNC pathname. NOTE: this is similar to CVE-2018-19296, but arose because 6.1.8 fixed a functionality problem in which UNC pathnames were always considered unreadable by PHPMailer, even in safe contexts. As an unintended side effect, this fix eliminated the code that blocked addAttachment exploitation.","date":"2021-04-27"}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","av":"n","ac":"l","pr":"n","ui":"n","s":"u","c":"h","i":"h","a":"h","score":"9.8","severity":"c","exploitable":"3.9","impact":"5.9"},"cwe":[{"cwe":"CWE-502","name":"Deserialization of Untrusted Data","description":"The product deserializes untrusted data without sufficiently verifying that the resulting data will be valid."}]}},{"name":"2.5","description":null,"source":[{"id":"ad1b26f36141d39ecc0ce9b69f34c9f0c0445b62","name":"WordPress core 4.7-5.7 - Sensitive Data Exposure vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-4-7-5-7-sensitive-data-exposure-vulnerability","description":"Sensitive Data Exposure vulnerability discovered by Mikael Korpela in WordPress core (versions 4.7-5.7).","date":"2021-04-15"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"878c3f63dab6c76f0344a4d3c247152861055548","name":"WordPress <= 5.5.1 - XML-RPC Privilege Escalation vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-5-5-1-xml-rpc-privilege-escalation-vulnerability","description":"XML-RPC Privilege Escalation vulnerability found by Justin Tran in WordPress (versions <= 5.5.1).","date":"2020-10-29"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"a6d6ba35b99dabc24f9c5b2a2d4cd835348393e1","name":"WordPress <= 5.3 - Stored Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-5-3-stored-cross-site-scripting-xss-vulnerability","description":"Stored Cross-Site Scripting (XSS) vulnerability found by Nguyen The Duc in WordPress (versions <= 5.3).","date":"2019-12-13"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"1fd8a6383ef380784a5ef2e3712844d5e5ddd7d0","name":"WordPress <= 5.2.3 - Multiple security issues (XSS, SSRF, Cache Poisoning)","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-5-2-3-multiple-security-issues-xss-ssrf-cache-poisoning","description":"Multiple security issues (XSS, SSRF, Cache Poisoning) found by Evan Ricafort, J.D. Grimes, Weston Ruter, David Newman, Eugene Kolodenker, Ben Bidner and WordPress security team in WordPress (versions <= 5.2.3).","date":"2019-10-15"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"962f5758624593a25a8ed7967999f6379d29b43a","name":"WordPress core <= 5.2.2 - Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-5-2-2-cross-site-scripting-xss-vulnerability","description":"Cross-Site Scripting (XSS) vulnerability found by Simon Scannell (RIPS Technologies), Zhouyuan Yang of (Fortinet) and Soroush Dalili in WordPress core (versions <= 5.2.2).","date":"2019-09-05"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"47591587b675c71807505c76c172ccdf783da34d","name":"WordPress 3.9-5.1 - Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-9-5-1-cross-site-scripting-xss-vulnerability","description":"Cross-Site Scripting (XSS) vulnerability found by Simon Scannell in WordPress (versions 3.9-5.1).","date":"2019-03-13"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"836e9e3fd0116e751693af7334391c592e260e93","name":"WordPress <= 5.0 - Authenticated File Delete vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-5-0-authenticated-file-delete-vulnerability","description":"Authenticated File Delete vulnerability found by RIPS Technologies in WordPress (versions <= 5.0).","date":"2018-12-13"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"b96677eff5b696f5877f2b6f0174e0db348dbba0","name":"WordPress <= 5.0 - Authenticated Post Type Bypass vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-5-0-authenticated-post-type-bypass-vulnerability","description":"Authenticated Post Type Bypass vulnerability found by RIPS Technologies in WordPress (versions <= 5.0).","date":"2018-12-13"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"eb90d3b1204611e9c4678dee0247d522303fb1a8","name":"WordPress <= 5.0 - PHP Object Injection via Meta Data vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-5-0-php-object-injection-via-meta-data-vulnerability","description":"PHP Object Injection via Meta Data vulnerability found by Sam Thomas in WordPress (versions <= 5.0).","date":"2018-12-13"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"2567b4d91f46edc0d67558816a28bf56c195a0a7","name":"WordPress <= 5.0 - Authenticated Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-5-0-authenticated-cross-site-scripting-xss-vulnerability","description":"Authenticated Cross-Site Scripting (XSS) vulnerability found by Tim Coen and Slavco in WordPress (versions <= 5.0).","date":"2018-12-13"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"6cb2056502d6a9ec46315ac51d66ef05b27c8bd3","name":"WordPress <= 5.0 - Cross-Site Scripting (XSS) vulnerability that could affect plugins","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-5-0-cross-site-scripting-xss-vulnerability-that-could-affect-plugins","description":"Cross-Site Scripting (XSS) vulnerability that could affect plugins found by Tim Coen in WordPress (versions <= 5.0).","date":"2018-12-13"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"c6e01031d691a316a1dc03d3761cdbe6590c904c","name":"WordPress <= 5.0 - User Activation Screen Search Engine Indexing","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-5-0-user-activation-screen-search-engine-indexing","description":"User Activation Screen Search Engine Indexing found by Yoast in WordPress (versions <= 5.0).","date":"2018-12-13"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"13ffd00a7f29d86046dd09dc0bd208dc2c93085d","name":"WordPress <= 5.0 - File Upload to XSS on Apache Web Servers vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-5-0-file-upload-to-xss-on-apache-web-servers-vulnerability","description":"File Upload to XSS on Apache Web Servers vulnerability found by Tim Coen and Slavco in WordPress (versions <= 5.0).","date":"2018-12-13"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"c92368cb8d7dcef63b7506c9a0d33b2186b91167","name":"WordPress <=4.9.4 - Vulnerable due to \"localhost\" default parameter","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-9-4-vulnerable-due-to-localhost-default-parameter","description":"WordPress versions 3.7-4.9.4 vulnerability due to \"localhost\" parameter. Don't treat localhost as same host by default.","date":"2018-04-05"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"94ac5b42f2402ead9079f5dbecfb2dcbdaaed3a8","name":"WordPress <=4.9.4 - Use Safe Redirect for Login","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-9-4-use-safe-redirect-for-login","description":"Use safe redirects when redirecting the login page if SSL is forced on WordPress versions 3.7-4.9.4","date":"2018-04-05"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"d1193b621597b8f3f91f583d1d4a4e9b7adac3a2","name":"WordPress <=4.9.4 - Escape Version in Generator Tag","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-9-4-escape-version-in-generator-tag","description":"Escape Version in Generator Tag on WordPress versions 3.7-4.9.4","date":"2018-04-05"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"d49986b4b2bb6c258731a357d588073ca989403e","name":"WordPress 3.7-4.9.1 - Cross-Site Scripting vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-9-1-cross-site-scripting-vulnerability","description":"Cross-Site Scripting vulnerability found in WordPress 3.7-4.9.1 versions in the Flash fallback files in MediaElement, a library that is included with WordPress.","date":"2018-01-17"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"900d968f281b77f00e0118b71c7a3a553101480c","name":"WordPress <=4.9 - Authenticated JavaScript File Upload vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-9-authenticated-javascript-file-upload-vulnerability","description":"Authenticated JavaScript File Upload vulnerability found in WordPress (versions <=4.9)","date":"2017-12-01"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"95477e97271b4aefb2ae1c68fabee016dafe3c22","name":"WordPress <=4.8.2 - potential SQL injection (SQLi), $wpdb->prepare() issue, possible unsafe queries","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-8-2-potential-sql-injection-sqli-wpdb-prepare-issue-possible-unsafe-queries","description":"Possible security issue found by Anthony Ferrara in WordPress (versions <=4.8.2). WordPress is not vulnerable itself, but themes or plugins could trigger the vulnerability.","date":"2017-10-31"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"d704b48a2679de8734d9c1c8d65b544fcd23622a","name":"WordPress <=4.8.1 - SQL injection (SQLi) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-8-1-sql-injection-sqli-vulnerability","description":"SQL injection vulnerability found in WordPress (versions <=4.8.1) by Slavca.<br \/>\nUpdate the WordPress to the latest available version (at least 4.8.2).<br \/>\n","date":"2017-09-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"7030797a964c7d2d9ba2f0e87fc9870fafd10c46","name":"WordPress <=4.8.1 - Cross-Site Scripting (XSS) vulnerability (oEmbed)","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-8-1-cross-site-scripting-xss-vulnerability","description":"Cross-Site Scripting (XSS) vulnerability found by xknown of the WordPress Security Team in WordPress (oEmbed) version 4.8.1 and earlier versions.<br \/>\nUpdate the WordPress to the latest available version (at least 4.8.2).<br \/>\n","date":"2017-09-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"b6332320b66f67a2aaadee0c1aa2da40d3609e36","name":"WordPress <=4.8.1 - Cross-Site Scripting (XSS) vulnerability (visual editor)","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-8-1-cross-site-scripting-xss-vulnerability-visual-editor","description":"Cross-Site Scripting (XSS) vulnerability found by Rodolfo Assis in WordPress (visual editor) version 4.8.1 and earlier versions.<br \/>\nUpdate the WordPress to the latest available version (at least 4.8.2).<br \/>\n","date":"2017-09-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"86e397bd00c6a5ff62e9ba6796a3f023f5dc2ced","name":"WordPress <=4.8.1 - Cross-Site Scripting (XSS) vulnerability (plugin editor)","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-8-1-cross-site-scripting-xss-vulnerability-plugin-editor","description":"Cross-Site Scripting (XSS) vulnerability found by Chen Ruiqi in WordPress (plugin editor) version 4.8.1 and earlier versions.<br \/>\nUpdate the WordPress to the latest available version (at least 4.8.2).<br \/>\n","date":"2017-09-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"0e9179fd65b5c3c0707dfa0cf72f39daaf387887","name":"WordPress <=4.8.1 - Cross-Site Scripting (XSS) vulnerability (template names)","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-8-1-cross-site-scripting-xss-vulnerability-template-names","description":"Cross-Site Scripting (XSS) vulnerability found by Luka (sikic) in WordPress (template names) version 4.8.1 and earlier versions.<br \/>\nUpdate the WordPress to the latest available version (at least 4.8.2).<br \/>\n","date":"2017-09-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"900ec967527b03873378a0596f2b028b66f55ea9","name":"WordPress <=4.8.1 - Cross-Site Scripting (XSS) vulnerability (link modal)","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-8-1-cross-site-scripting-xss-vulnerability-link-modal","description":"Cross-Site Scripting (XSS) vulnerability found by Anas Roubi (qasuar) in WordPress (link modal) version 4.8.1 and earlier versions.<br \/>\nUpdate the WordPress to the latest available version (at least 4.8.2).<br \/>\n","date":"2017-09-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"996462c662d889a90a5fce30ca05701618a94362","name":"WordPress <=4.8.1 - Path traversal vulnerability (file unzipping code)","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-8-1-path-traversal-vulnerability-file-unzipping-code","description":"Path traversal vulnerability found by Alex Chapman (noxrnet) in WordPress (file unzipping code) version 4.8.1 and earlier versions.<br \/>\nUpdate the WordPress to the latest available version (at least 4.8.2).<br \/>\n","date":"2017-09-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"da8e7ebd9c5d6bfdb510f4f5bf169eca96c8805f","name":"WordPress <=4.8.1 - Path traversal vulnerability (customizer)","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-8-1-path-traversal-vulnerability-customizer","description":"Path traversal vulnerability found by Weston Ruter of the WordPress Security Team in WordPress (customizer) version 4.8.1 and earlier versions.<br \/>\nUpdate the WordPress to the latest available version (at least 4.8.2).<br \/>\n","date":"2017-09-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"9d769495ca9166b38d629448da18d48d2828ddea","name":"WordPress <=4.8.1 - Open redirect vulnerability (user and term edit screens)","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-8-1-open-redirect-vulnerability-user-and-term-edit-screens","description":"Open redirect vulnerability found by Yasin Soliman (ysx) in WordPress (user and term edit screens) version 4.8.1 and earlier versions.<br \/>\nUpdate the WordPress to the latest available version (at least 4.8.2).<br \/>\n","date":"2017-09-19"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"fd869c34eec7a14e0b24d2cfa60e1c488e815b65","name":"WordPress <= 4.5.3 - Path traversal","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-5-3-path-traversal","description":"WordPress prior to 4.5.3 is prone to a path traversal vulnerability. It was found in the Core Ajax handlers of the WordPress Admin API.\nUpdate WordPress to 4.6.","date":"2016-07-12"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"6888837336183022c4e7f3959ce465dbf219971a","name":"WordPress DEV Blogs MU 1.2.6 - HTML Injection Vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wpmudev\/wordpress-dev-blogs-mu-1-2-6-html-injection-vulnerability","description":"WordPress DEV Blogs MU is prone to an HTML-injection vulnerability because of failure to sufficiently clean up user-supplied input. It allows an attacker to execute arbitrary script code in the browser in the context of the affected websites. In this way an attacker can steal cookie-based authentication credentials or control how the websites are rendered to the user. Other attacks (for the example a cross-site scripting) are also possible.\nUpdate WordPress.","date":"2011-09-26"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"8968f31c7399186966d41bf3550ef639d040e634","name":"WordPress Regular Subscriber Plugin 3.1.x - HTML Injection Vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/regular-subscriber\/wordpress-regular-subscriber-plugin-3-1-x-html-injection-vulnerability","description":"WordPress Regular Subscriber plugin is prone to an HTML-injection vulnerability because of failure to sufficiently clean up user-supplied input. It allows an attacker to execute arbitrary script code in the browser in the context of the affected websites. In this way an attacker can steal cookie-based authentication credentials or control how the websites are rendered to the user. Other attacks (for the example a cross-site scripting) are also possible.\nUpdate the plugin.","date":"2011-09-26"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"1b008d7a5dff1d4a962591d7b6ee9ec836ec665e","name":"WordPress 3.4.2 -  Multiple Path Dislosure Vulnerabilities","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-4-2-multiple-path-dislosure-vulnerabilities","description":"WordPress 3.4.2 version is prone to multiple path dislosure vulnerabilities that can be used by remote attackers to obtain sensitive information that may lead to further attacks.\nUpdate WordPress.","date":"2012-09-18"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"86827fed85cd5f55c5b061129bcfd699734e40cd","name":"WordPress <=3.6 - URL Redirect Restriction Bypass","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-3-6-url-redirect-restriction-bypass","description":"WordPress version 3.6 is affected by a URL redirect restriction bypass vulnerability. It allows an attacker to craft a URL by clicking, that the victim would be taken to a site of the attacker's choice via the Location: tag in a 302 Redirect.\nUpgrade to version 3.6.1.","date":"2013-10-14"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"fb14e1d8615b3a4d28405268be07bfd5233bc0e2","name":"WordPress <= 4.2 - Stored XSS","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-4-2-stored-xss","description":"A stored XSS affects the WordPress core. This vulnerability allows an attacker to inject JavaScript in WordPress comments, change the administrator\u2019s password, create new accounts or execute arbitrary code \r\non the server through the theme and plugin editors.\nUpdate WordPress.","date":"2015-04-27"}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"CVE-2013-4144","name":"CVE-2013-4144","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2013-4144","description":"There is an object injection vulnerability in swfupload plugin for wordpress.","date":"2022-06-30"}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H","av":"n","ac":"l","pr":"n","ui":"n","s":"u","c":"h","i":"h","a":"h","score":"9.8","severity":"c","exploitable":"3.9","impact":"5.9"},"cwe":[{"cwe":"CWE-74","name":"Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')","description":"The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component."}]}},{"name":"2.5","description":null,"source":[{"id":"CVE-2017-8295","name":"CVE-2017-8295","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2017-8295","description":"WordPress through 4.7.4 relies on the Host HTTP header for a password-reset e-mail message, which makes it easier for remote attackers to reset arbitrary passwords by making a crafted wp-login.php?action=lostpassword request and then arranging for this message to bounce or be resent, leading to transmission of the reset key to a mailbox on an attacker-controlled SMTP server. This is related to problematic use of the SERVER_NAME variable in wp-includes\/pluggable.php in conjunction with the PHP mail function. Exploitation is not achievable in all cases because it requires at least one of the following: (1) the attacker can prevent the victim from receiving any e-mail messages for an extended period of time (such as 5 days), (2) the victim's e-mail system sends an autoresponse containing the original message, or (3) the victim manually composes a reply containing the original message.","date":"2017-05-04"}],"impact":{"cvss":{"version":"3.0","vector":"CVSS:3.0\/AV:N\/AC:H\/PR:N\/UI:N\/S:U\/C:N\/I:H\/A:N","av":"n","ac":"h","pr":"n","ui":"n","s":"u","c":"n","i":"h","a":"n","score":"5.9","severity":"m","exploitable":"2.2","impact":"3.6"},"cwe":[{"cwe":"CWE-640","name":"Weak Password Recovery Mechanism for Forgotten Password","description":"The product contains a mechanism for users to recover or change their passwords without knowing the original password, but the mechanism is weak."}]}},{"name":"2.5","description":null,"source":[{"id":"7d9386037f2ade251ba2e0ae50859b4460c93c72","name":"Wordpress Core &lt;= 4.7.4 - Unauthorized Password Reset","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-474-unauthorized-password-reset","description":"WordPress through 4.7.4 relies on the Host HTTP header for a password-reset e-mail message, which makes it easier for remote attackers to reset arbitrary passwords by making a crafted wp-login.php?action=lostpassword request and then arranging for this message to bounce or be resent, leading to transmission of the reset key to a mailbox on an attacker-controlled SMTP server. This is related to problematic use of the SERVER_NAME variable in wp-includes\/pluggable.php in conjunction with the PHP mail function. Exploitation is not achievable in all cases because it requires at least one of the following: (1) the attacker can prevent the victim from receiving any e-mail messages for an extended period of time (such as 5 days), (2) the victim&#039;s e-mail system sends an autoresponse containing the original message, or (3) the victim manually composes a reply containing the original message.","date":null}],"impact":[]},{"name":"2.5","description":null,"source":[{"id":"1d4db94655583feeed6696dfcb3d42d76aece6ca","name":"WordPress Core &lt; 3.8.2 - SQL Injection","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-382-sql-injection","description":"WordPress Core, in versions less than 3.8.2, is vulnerable to SQL Injection via the &#039;links_recently_updated_time&#039; parameter. This can only be exploited by administrative users and above.","date":null}],"impact":[]}]},"updated":"1672737500"}