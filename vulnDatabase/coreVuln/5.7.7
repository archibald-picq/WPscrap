{"error":0,"message":null,"data":{"core":"5.7.7","link":null,"vulnerability":[{"name":"5.7.7","description":null,"source":[{"id":"f3b7aa9bc8b0e8c3f64bd2fb40359671b0fc09e5","name":"WordPress <= 6.0.1 - Authenticated Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-6-0-1-reflected-cross-site-scripting-xss-vulnerability","description":"Authenticated Cross-Site Scripting (XSS) vulnerability discovered by Khalilov Moe in WordPress <= 6.0.1\nUpdate the WordPress to the latest available version (at least 6.0.2 or another patched version).","date":"2022-08-31"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"f7331d6ee9602487d9421d51bbaa8d003f910b50","name":"WordPress  <= 6.0.1 - Authenticated Stored Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-6-0-1-authenticated-stored-cross-site-scripting-xss-vulnerability","description":"Authenticated Stored Cross-Site Scripting (XSS) vulnerability discovered by John Blackbourn in WordPress (versions <= 6.0.1)\nUpdate the WordPress to the latest available version (at least 6.0.2 or another patched version).","date":"2022-08-31"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"2ec5c355e61ff7b994ccfa9ce9a87f34bf7b22f2","name":"WordPress <= 6.0.1 - Authenticated SQL Injection (SQLi) vulnerability via Link API","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-6-0-1-sql-injection-sqli-vulnerability-via-link-api","description":"Authenticated SQL Injection (SQLi) vulnerability via Link API discovered by FVD in WordPress core (versions <= 6.0.1).\nUpdate the WordPress to the latest available version (at least 6.0.2 or another patched version).","date":"2022-08-31"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"7ca7fdc97c224368112a3734c88a69d9d7c94000","name":"WordPress core <= 6.0.2 - Data Exposure vulnerability via REST API","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-6-0-2-data-exposure-vulnerability-via-rest-api","description":"Data Exposure vulnerability via REST API discovered by Than Taintor in WordPress core (versions <= 6.0.2).\nUpdate the WordPress to the latest available version (at least 6.0.3).","date":"2022-10-18"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"ca4682638553f66010a18e13305731295b692a26","name":"WordPress core <= 6.0.2 - Sender\u2019s Email Address Exposure vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-6-0-2-sender-s-email-address-exposure-vulnerability","description":"Sender\u2019s Email Address Exposure vulnerability via wp-mail.php was discovered by Toshitsugu Yoneyama (Mitsui Bussan Secure Directions, Inc. via JPCERT) in the WordPress core (versions <= 6.0.2).\nUpdate the WordPress to the latest available version (at least 6.0.3).","date":"2022-10-18"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"9b32f82750891d500f0d63e3aba0555642392326","name":"WordPress core <= 6.0.2 - Stored Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-6-0-2-stored-cross-site-scripting-xss-vulnerability","description":"Stored Cross-Site Scripting (XSS) vulnerability via wp-mail.php discovered by Toshitsugu Yoneyama (Mitsui Bussan Secure Directions, Inc. via JPCERT) in WordPress core (versions <= 6.0.2)\nUpdate the WordPress to the latest available version (at least 6.0.3).","date":"2022-10-18"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"adb1960ffcbdecb10955812fd87563936cb4c166","name":"WordPress core <= 6.0.2 - Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-6-0-2-cross-site-scripting-xss-vulnerability-in-the-widget-block","description":"Cross-Site Scripting (XSS) vulnerability in the Widget block discovered in WordPress core (versions <= 6.0.2)\nUpdate the WordPress to the latest available version (at least 6.0.3).","date":"2022-10-18"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"761a0083b5932c8e9df515c1e4ecea5f28ebace3","name":"WordPress core <= 6.0.2 - Stored Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-6-0-2-stored-cross-site-scripting-xss-vulnerability-2","description":"Stored Cross-Site Scripting (XSS) vulnerability via Customizer discovered by Alex Concha (WordPress security team) in WordPress core (versions <= 6.0.2).\nUpdate the WordPress WordPress wordpress to the latest available version (at least 6.0.3).","date":"2022-10-18"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"3a7544eb6007bc2de4a64e79bd36fc601cef87ba","name":"WordPress core <= 6.0.2 - Reflected Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-6-0-2-reflected-cross-site-scripting-xss-vulnerability","description":"Reflected Cross-Site Scripting (XSS) vulnerability via SQL Injection (SQLi) in Media Library discovered by Ben Bidner (WordPress security team) and Marc Montpas (Automattic) in WordPress core (versions <= 6.0.2).\nUpdate the WordPress to the latest available version (at least 6.0.3).","date":"2022-10-18"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"fe7f5bd1bac786a3e5ebfe17e263c6d61e96fdd5","name":"WordPress core <= 6.0.2 - Stored Cross-Site Scripting (XSS) vulnerability in Comment editing","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-6-0-2-stored-cross-site-scripting-xss-vulnerability-in-comment-editing","description":"Stored Cross-Site Scripting (XSS) vulnerability in Comment editing discovered by Alex Concha (WordPress security team) in WordPress core (versions <= 6.0.2)\nUpdate the WordPress to the latest available version (at least 6.0.3).","date":"2022-10-18"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"b771f01a44c736d447409970cb6d825b5d040bb7","name":"WordPress core <= 6.0.2 - Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-6-0-2-cross-site-scripting-xss-vulnerability-2","description":"Cross-Site Scripting (XSS) vulnerability in the Feature Image block discovered in WordPress core (versions <= 6.0.2)\nUpdate the WordPress to the latest available version (at least 6.0.3).","date":"2022-10-18"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"190e68095cf326a45591fd3dd32a007f3a8765e4","name":"WordPress core <= 6.0.2 - Stored Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-6-0-2-stored-cross-site-scripting-xss-vulnerability-4","description":"Stored Cross-Site Scripting (XSS) vulnerability in RSS Block discovered in WordPress core (versions <= 6.0.2).\nUpdate the WordPress to the latest available version (at least 6.0.3).","date":"2022-10-18"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"8cf1a27ef6994f736713659e698410b8ba2a8056","name":"WordPress core <= 6.0.2 - Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-6-0-2-cross-site-scripting-xss-vulnerability","description":"Cross-Site Scripting (XSS) vulnerability in the Search block discovered by Alex Concha (WP Security team) in WordPress core (versions <= 6.0.2).\nUpdate the WordPress to the latest available version (at least 6.0.3).","date":"2022-10-18"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"8363372e444bd3e93c9b85bbcb2ae0999dabbad9","name":"WordPress core <= 6.0.2 - SQL Injection (SQLi) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-6-0-2-sql-injection-sqli-vulnerability","description":"SQL Injection (SQLi) vulnerability due to improper sanitization in WP_Date_Query discovered by Michael Mazzolini in WordPress core (versions <= 6.0.2).\nUpdate the WordPress WordPress wordpress to the latest available version (at least 6.0.3).","date":"2022-10-18"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"cbad750e62acc4e86903df33cd4e1b73d81454b1","name":"WordPress core <= 6.0.2 - Content From Multipart Emails Leak vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-6-0-2-content-from-multipart-emails-leak-vulnerability","description":"Content From Multipart Emails Leak vulnerability when HTML\/plaintext used discovered by Thomas Kr\u00e4ftner in WordPress core (versions <= 6.0.2).\nUpdate the WordPress WordPress wordpress to the latest available version (at least 6.0.3).","date":"2022-10-18"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"7fb29fe75ce5d996234e74ba1d073bf366429926","name":"WordPress core <= 6.0.2 - Cross-Site Request Forgery (CSRF) vulnerability in wp-trackback.php","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-6-0-2-cross-site-request-forgery-csrf-vulnerability-in-wp-trackback-php","description":"Cross-Site Request Forgery (CSRF) vulnerability in wp-trackback.php discovered by Simon Scannell in WordPress core (versions <= 6.0.2).\nUpdate the WordPress to the latest available version (at least 6.0.3).","date":"2022-10-18"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"99b696e0ecdb0f6d3a64b1a413467fd11dd6e763","name":"WordPress core <= 6.0.2 - Stored Cross-Site Scripting (XSS) vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpress-core-6-0-2-stored-cross-site-scripting-xss-vulnerability-3","description":"Stored Cross-Site Scripting (XSS) vulnerability in RSS Widget discovered in WordPress core (versions <= 6.0.2).\nUpdate the WordPress to the latest available version (at least 6.0.3).","date":"2022-10-18"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"41e27e626f6edf652a6b9204bc05564d210ebdac","name":"WordPress core <= 6.0.2 - Open redirect vulnerability","link":"https:\/\/patchstack.com\/database\/vulnerability\/wordpress\/wordpres-core-6-0-2-open-redirect-vulnerability","description":"Open redirect vulnerability in wp_nonce_ays discovered by devrayn in WordPress core (versions <= 6.0.2)\nUpdate the WordPress to the latest available version (at least 6.0.3).","date":"2022-10-18"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"JVNDB-2022-000087","name":"Multiple vulnerabilities in WordPress","link":"http:\/\/jvndb.jvn.jp\/jvndb\/JVNDB-2022-000087","description":"WordPress contains multiple vulnerabilities listed below which are to the WordPress Post by Email Feature. <ul><li>Stored Cross-site scripting (CWE-79) - CVE-2022-43497<\/li><li>Stored Cross-site scripting (CWE-79) - CVE-2022-43500<\/li><li>Improper authentication (CWE-287) - CVE-2022-43504<\/li><\/ul> Toshitsugu Yoneyama of Mitsui Bussan Secure Directions, Inc. reported these vulnerabilities to IPA. JPCERT\/CC coordinated with the developer under Information Security Early Warning Partnership.\n\nSolution: [Update the Software] Update to the latest version according to the information provided by the developer. According to the developer, these vulnerabilities have been fixed in version 6.0.3.","date":"2022-11-08"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"CVE-2022-43504","name":"CVE-2022-43504","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2022-43504","description":"Improper authentication vulnerability in WordPress versions prior to 6.0.3 allows a remote unauthenticated attacker to obtain the email address of the user who posted a blog using the WordPress Post by Email Feature. The developer also provides new patched releases for all versions since 3.7.","date":"2023-02-02"}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:L\/I:N\/A:N","av":"n","ac":"l","pr":"n","ui":"n","s":"u","c":"l","i":"n","a":"n","score":"5.3","severity":"m","exploitable":"3.9","impact":"1.4"},"cwe":[{"cwe":"CWE-287","name":"Improper Authentication","description":"When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct."}]}},{"name":"5.7.7","description":null,"source":[{"id":"CVE-2022-43500","name":"CVE-2022-43500","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2022-43500","description":"Cross-site scripting vulnerability in WordPress versions prior to 6.0.3 allows a remote unauthenticated attacker to inject an arbitrary script. The developer also provides new patched releases for all versions since 3.7.","date":"2023-02-02"}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","av":"n","ac":"l","pr":"n","ui":"r","s":"c","c":"l","i":"l","a":"n","score":"6.1","severity":"m","exploitable":"2.8","impact":"2.7"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"5.7.7","description":null,"source":[{"id":"CVE-2022-43497","name":"CVE-2022-43497","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2022-43497","description":"Cross-site scripting vulnerability in WordPress versions prior to 6.0.3 allows a remote unauthenticated attacker to inject an arbitrary script. The developer also provides new patched releases for all versions since 3.7.","date":"2023-02-02"}],"impact":{"cvss":{"version":"3.1","vector":"CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:R\/S:C\/C:L\/I:L\/A:N","av":"n","ac":"l","pr":"n","ui":"r","s":"c","c":"l","i":"l","a":"n","score":"6.1","severity":"m","exploitable":"2.8","impact":"2.7"},"cwe":[{"cwe":"CWE-79","name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","description":"The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."}]}},{"name":"5.7.7","description":null,"source":[{"id":"78cb0ca6db616fea2d602146ff644e60b6f952a9","name":"WordPress Core &lt; 6.0.3 - Shared User Instance Weakness","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-603-shared-user-instance-weakness","description":"WordPress Core in versions up to 6.0.3 had a weakness in how Share User Instances were handled. This fix appears to have been necessary to safely use the wp_set_current_user( 0 ); method to patch the previously mentioned XSS and CSRF in wp-mail.php and wp-trackback.php vulnerabilities. The previous functionality may have resulted in third party plugins or themes using the wp_set_current_user function in a way that could lead to privilege escalation and users being able to perform more actions than originally intended.","date":null}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"2e4c185cddfe91117267695bf876b39f965ae54c","name":"WordPress Core &lt; 6.0.3 - Open Redirect","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-603-open-redirect","description":"WordPress Core is vulnerable to open redirect in versions up to 6.0.3. This is due to insufficient validation of the &#039;Referer&#039; header and _wp_http_referer request parameter when a user accesses a link with an expired or invalid nonce. This would make it possible for an attacker to redirect a victim to a potentially malicious site, granted they could trick the victim into performing an action such as clicking on a link.","date":null}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"190fc0bb9fef5e631087ea153589b8a8a6f90960","name":"WordPress Core &lt; 6.0.3 - Information Disclosure (Multi-Part Email Leak)","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-603-information-disclosure-multi-part-email-leak","description":"WordPress Core is vulnerable to information disclosure via a REST-API endpoint in versions up to 6.0.3. The endpoint for terms and tags did not perform enough validation on the user requesting information about terms and tags for a given post. This made it possible for users with access to terms and tags, such as a contributor, to determine those details on all posts not belonging to them, even when in a private status. This does not reveal critical information, and as such it is not likely to be exploited.","date":null}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"965a319b01a13c6eead339996178eb24e2e0d491","name":"WordPress Core &lt; 6.0.3 - Authenticated (Admin+) Stored Cross-Site Scripting via Customizer","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-603-authenticated-admin-stored-cross-site-scripting-via-customizer","description":"WordPress Core is vulnerable to Stored Cross-Site Scripting via the Customizer in versions up to 6.0.3. This is due to insufficient escaping on the &#039;Blog Name&#039; value that could be edited and become executable with the right payload while in the theme customizer. This would make it possible for authenticated attacker with access to customize a theme, such as administrators to inject malicious JavaScript into the page.","date":null}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"c9323f64fe9af6b7bd7edb0c979a9855fb13e098","name":"WordPress Core &lt; 6.0.3 - Authenticated Information Disclosure via REST-API","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-603-authenticated-information-disclosure-via-rest-api","description":"WordPress Core is vulnerable to information disclosure via the REST-API in versions up to 6.0.3. The REST API endpoint for terms and tags did not perform enough validation on the user requesting information about terms and tags for a given post. This made it possible for users with access to terms and tags, such as a contributor, to determine those details on all posts not belonging to them, even when in a private status. This does not reveal critical information.","date":null}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"63b392aea1c1b4bc1361601b817a44bafe763b06","name":"WordPress Core &lt; 6.0.3 - Reflected Cross-Site Scripting via SQL Injection","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-603-reflected-cross-site-scripting-via-sql-injection","description":"WordPress Core is vulnerable to SQL Injection in the Media Library that can be leveraged to exploit a Reflected Cross-Site Scripting issue in versions up to 6.0.3. This is due to insufficient escaping on user supplied values passed to a SQL query.  This makes it possible for an attacker to achieved JavaScript code execution in a victims browser, granted they can trick the victim into performing an action such as clicking on a link.","date":null}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"9ee0cd84d77b81697234ae7dc17da7bdc5cf4e78","name":"WordPress Core &lt; 6.0.3 - Cross-Site Request Forgery via wp-trackback.php","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-603-cross-site-request-forgery-via-wp-trackbackphp","description":"WordPress Core is vulnerable to Cross-Site Request Forgery via wp-trackback.php in versions up to 6.0.3. This is due to the fact that the any request to wp-trackback.php would assume the identity of the user whose cookies are sent with the request. This would make it possible for an unauthenticated user to trigger a trackback assuming the identity of another user, granted they could trick that other user into performing the action. In new versions of WordPress, the identity will always be a non-existent user with the ID of 0, which represents an unauthenticated user.","date":null}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"9abbc1eef7432ddae819cebac05eda27f8968cb7","name":"WordPress Core &lt; 6.0.3 - Information Disclosure (Email Address)","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-603-information-disclosure-email-address","description":"WordPress Core is vulnerable to Information Disclosure of in versions up to 6.0.3. When the post by email functionality is enabled, it may log post author&#039;s email addresses in a way that may be publicly accessible. This could make it possible for attackers to steal post author&#039;s email addresses and use that for further attacks.","date":null}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"c090fb8976cdf06fe4a784b26e31a994810574e6","name":"WordPress Core &lt; 6.0.3 - Authenticated (Editor+) Stored Cross-Site Scripting via Comments","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-603-authenticated-editor-stored-cross-site-scripting-via-comments","description":"WordPress Core is vulnerable to Stored Cross-Site Scripting, exploitable during comment editing, in versions up to 6.0.3. This is due to insufficient escaping and sanitization on the values being stored during a comment update. This makes it possible for authenticated users with high level permissions, such as an editor, to modify post comments to include malicious web scripts that will execute whenever someone accesses the comment.","date":null}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"3125d7e18248788cbd9188f71d414ec4bb93250e","name":"WordPress Core &lt; 6.0.3 - SQL Injection via WP_Date_Query","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-603-sql-injection-via-wp-date-query","description":"WordPress Core is vulnerable to SQL Injection in versions up to 6.0.3. This is due to insufficient escaping on where &ldquo;AND&rdquo; and &ldquo;OR&rdquo; present in the query. This may make it possible for attackers to achieve SQL Injection when another plugin or theme is installed on the site that allows WP_Date_Query to be used insecurely.","date":null}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"CVE-2022-3590","name":"CVE-2022-3590","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2022-3590","description":"WordPress is affected by an unauthenticated blind SSRF in the pingback feature. Because of a TOCTOU race condition between the validation checks and the HTTP request, attackers can reach internal hosts that are explicitly forbidden.","date":"2022-12-14"}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"1a4eda6bf228066df200968ba5b74b0c8e73621a","name":"WordPress Core &lt; 6.2.1 - Cross-Site Request Forgery","link":"https:\/\/www.wordfence.com\/threat-intel\/vulnerabilities\/wordpress-core\/wordpress-core-621-cross-site-request-forgery","description":"WordPress Core is vulnerable to Cross-Site Request Forgery due to missing nonce validation on the &lsquo;wp_ajax_set_attachment_thumbnail&rsquo; AJAX function in versions up to, and including, 6.2. This allows unauthenticated users to update the thumbnail image associated with existing attachments, granted they can trick an authenticated user with appropriate permissions into performing an action, such as clicking a link. The impact of this vulnerability is incredibly minimal.","date":null}],"impact":[]},{"name":"5.7.7","description":null,"source":[{"id":"CVE-2023-2745","name":"CVE-2023-2745","link":"https:\/\/www.cve.org\/CVERecord?id=CVE-2023-2745","description":"WordPress Core is vulnerable to Directory Traversal in versions up to, and including, 6.2, via the \u2018wp_lang\u2019 parameter. This allows unauthenticated attackers to access and load arbitrary translation files. In cases where an attacker is able to upload a crafted translation file onto the site, such as via an upload form, this could be also used to perform a Cross-Site Scripting attack.","date":"2023-05-17"}],"impact":[]}]},"updated":"1684336965"}